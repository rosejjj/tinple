<!DOCTYPE html>
<html>

<head>
  <meta charset="UTF-8">
  <title></title>
  <meta name="viewport" content="width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no" />
  <meta name="format-detection" content="telephone=no,email=no,date=no,address=no">
  <link rel="stylesheet" type="text/css" href="../../css/api.css" />
  <script src="../../json/api.json"></script>
  <script src="../../json/router.json"></script>
  <style type="text/css">
    * {
      padding: 0;
      margin: 0;
      box-sizing: border-box;
      font-family: "微软雅黑";
    }

    html,
    body {
      width: 100%;
      height: 100%;
          background: white;
    }

    header {
      width: 100%;
      height: 18.7vw;
      /*margin-top:25px;*/
      padding: 15px 2.66vw;
      display: -webkit-flex;
      display: flex;
      -webkit-justify-content: space-between;
      justify-content: space-between;
      position: relative;
      background: #ffffff;
      /*box-shadow: 0 0 10px #36A5B2;linear-gradient(to right, #d9afd9 0%, #97d9e1 100%)*/
      /*margin-bottom:3px;*/
      z-index: 100;
      box-shadow: 0px 0px 2px .9px #efefef;
    }

    .back {
      width: 8.3333vw;
      height: 8.3333vw;
      margin-top: 3.3vw;
      /*margin-top: 3.16666vw;*/
      background: url(../../icon/messages/back.png)no-repeat center center;
      background-size: cover;
    }

    .info {
      height: 100%;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
    }

    .info .nickname {
      position: relative;
      top: 4px;
      width: 50vw;
      height: 100%;
      line-height: 14vw;
      color: #101010;
      font-size: 4.8vw;
      font-weight: bold;
      text-align: center;
      text-shadow: 0 0 1px 0 #36A5B2;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      /*background: red;*/
    }

    .more {
      width: 8.3333vw;
      height: 8.3333vw;
      margin-top: 3.16666vw;
      background: url(../../icon/more.png) no-repeat center center;
      background-size: cover;

    }

    .main {
      padding-top: 5.55vw;
      height: 83vh;
      padding-bottom: 7vw;
      overflow-y: scroll;
      -webkit-overflow-scrolling: touch;
      position: relative;
      z-index: 4;
      opacity:0;
    }

    .message-date {
      width: 100%;
      padding: 0 5.5555vw;
    }

    .tips {
      display: inline-block;
      left: 50%;
      transform: translateX(-50%);
      position: relative;
      z-index: 4;
      padding: 0vw 3.7777vw;
      /*margin-bottom: 5px;*/
      color: white;
      font-weight: bold;
      font-size: 11px;
      text-align: center;
      background-color: #d5d5d5;
      border-radius: 10px;
      height: 25px;
      line-height: 25px;
    }
    .tips1 {
      top:-8px;
      display: inline-block;
      left: 50%;
      transform: translateX(-50%);
      position: relative;
      z-index: 4;
      padding: 0vw 3.7777vw;
      margin-bottom: 10px;
      color: white;
      font-weight: bold;
      font-size: 11px;
      text-align: center;
      /*background-color: #d5d5d5;*/
      border-radius: 10px;
      height: 25px;
      line-height: 25px;
      /*margin-bottom: 8px;*/
    }

    .message-date .message-wrap {
      display: flex;
      flex-direction: column;
    }

    .message-date .message-wrap::after {
      content: '';
      display: block;
      clear: both;
    }
    li{margin: 0 -5px 0 -5px !important;padding: 0px!important;}
    /*.message-date .message {
      max-width: 70.8333vw;
      color: #fff;
      padding: 2.777vw 5.5555vw;
      border-radius: 5.5555vw;
      font-weight: bold;
      display: flex;
      align-items: center;
      justify-content: center;
      flex-flow: row wrap;
      text-shadow: 0 0 1px 0 #36A5B2;
      position: relative;
      word-break: break-all;
      box-shadow: 0 1px 2px rgba(0, 0, 0, 0.18), 0 2px 2px rgba(0, 0, 0, 0.25);
    }

    .message-date .message-left {
      font-size: 4.16666vw;
      background-color: white;
      color: #36A5B2;
      align-self: flex-start;
      box-shadow: 0px 0px 10px 0px rgba(54, 165, 178, .4);
      margin-top: 5.55vw;
      border-bottom-left-radius: 0;
    }

    .message-date .message-right {
      font-size: 3.8888vw;
      background: linear-gradient(to right, #d9afd9 0%, #97d9e1 100%);
      box-shadow: 0px 0px 10px 0px rgba(54, 165, 178, 1);
      align-self: flex-end;
      margin-top: 5.55vw;
      border-bottom-right-radius: 0;
    }*/
    .message-date .message{
      display: flex;
      text-shadow: 0 0 1px 0 #36A5B2;
      /*margin-top: 8vw;*/
      word-break: break-all;
    }
    .message-date .message-left{
      justify-content: flex-end;
      position: relative;
    }
    .message-date .message-right{
      justify-content: flex-start;
      position: relative;
    }
    .message .content .content-name{
      color: #AAAAAA;
      font-size: 10px;
      margin-bottom: 2.13vw;
      font-weight: normal;
    }
     .content-text-right{

      /*margin-top:13px;*/
      max-width: 60vw;
      color: white;
      font-weight: normal;
      padding: 8px 15px;
      font-size: 12px;
      border-radius: 5.5555vw;
      border-top-right-radius: 0;
      /*box-shadow: 0px 0px 10px 0px rgba(54, 165, 178, 1);*/
      background: #484848;
    }
    .message .content .content-text-left{
      max-width: 60vw;
      background-color: #efefef;
      color: #484848;
      font-weight: normal;
      padding: 8px 15px;
      border-radius: 0vw 5.5555vw 5.5555vw 5.5555vw;
      /*border-bottom-left-radius: 0px;*/
      /*box-shadow: 0px 0px 10px 0px rgba(54, 165, 178, .4);*/
      font-size: 12px;
    }

    .message .content .translated{
      max-width: 60vw;
      color: #aaa;
      padding: 2.77vw 5.55vw 0 5.55vw;
      font-size: 12px;
      /*font-weight: bold;*/
      text-shadow: 0 0 1px 0 #36A5B2;
      margin-bottom: 15px;
    }
    .message .avatar{
      /*background: red;*/
      /*width: 13.33vw;
      height: 13.33vw;*/
      width: 30px;
      height: 30px;
      margin: 2.66vw;
      margin-top: 0;
    }
    .avatar img{
      width: 100%;
      height: 100%;
      border-radius: 100%;
      object-fit: cover;
      /*box-shadow: 0px 0px 10px 0px rgba(54, 165, 178, 1);*/
    }
    .more-list {
      width: 100%;
      height: 100vh;
      position: fixed;
      top: 0;
      left: 0;
      background-color: rgba(34, 34, 34, .7);
      z-index: 10;
    }

    .list-content {
      width: 94.4vw;
      text-align: center;
      position: absolute;
      left: 50%;
      bottom: 6.93vw;
      transform: translateX(-50%);
    }

    .list-content .list-title {
      width: 100%;
      height: 9.6vw;
      line-height: 9.6vw;
      background: #FFF;
      color: #8F8E94;
      font-size: 3.46vw;
      border-bottom: 1px solid #999;
      border-top-left-radius: 13px;
      border-top-right-radius: 13px;
    }

    .list-content .btn {
      width: 100%;
      height: 15.2vw;
      line-height: 15.2vw;
      background: #FFF;
      color: #0076FF;
      font-size: 5.33vw;
      border-bottom: 1px solid #999;
    }

    .list-content .cancel {
      width: 100%;
      height: 15.2vw;
      line-height: 15.2vw;
      background: white;
      border-radius: 13px;
      margin-top: 2.13vw;
      color: #0076FF;
      font-size: 5.33vw;
      border: 1px solid #9EA6B7;
    }
    .message-date .msg_img {
      max-width: 55.5555vw;
      max-height: 40vw;
      display: block;
      border-radius: 8px;
      object-fit: cover;
      border: 1px solid #fff;
    }

    .message-date .msg_img2 {
      width: 8.33vw;
      height: 8.33vw;
      position: absolute;
      bottom: 2vw;
      right: 2vw;
      opacity: .6;
      right: 22vw;
      bottom: 8vw;
    }
    .loading {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      z-index: 5;
    }
    .bin2{
      display: none;
      position: fixed;
      top: 40%;
      transform: translateY(-50%);
      left: 50%;
      transform: translateX(-50%);
      background: rgba(0,0,0,.6);
      /*opacity: 0.6;*/
      width: 200px;
      height: 150px;
      z-index: 9999999999999;
      background-image: url('../../icon/luzhi.gif');
      background-size: cover;
      background-position: center;
      border-radius: 20px;
    }
    .abin1 {
        display: none;
        width: 50px;
        height: 20px;
        /*text-align: center;*/
        position: relative;
    }

    .abin3 {
        display: block;
        width: 40px;
         height: 20px;
        /*text-align: center;*/
        position: relative;

        /*vertical-align: bottom;*/
    }
  .binimg{
      float: right;
      width: 20px;
      height:20px;
      margin: 0 -10px -10px -10px;
    }
    .binimg_left{
        float: left;;
        width: 20px;
        height:20px;
        margin: 0px -10px -10px -10px;
      }
      .send1 {
        position: absolute;
        top:2.6vw;
        /*left: -5.7vw;*/
        font-size: 12px;
        color: white;
        width: 40px;
        height: 30px;
        /*margin-right: 100px;*/
        margin-left: -9px;
        /*font-style:italic;*/
        /*margin-top: 3px;*/
        text-align:center;
      }
      .send2{
        position: absolute;
        left: -81px;
        margin-top: 3.5px;
        /*top:8vw;*/
        /*margin-left: 210px;*/
      /*float: right;*/
      /*font-style:italic;*/
        font-size: 12px;
        color: black;
        width: 30px;
        height: 30px;
        text-align:center;
      }
      .send3 {
        position: absolute;
        /*left: -5.7vw;*/
        /*font-size: 18px;*/
        color: black;
        width: 15px;
        height: 15px;
        /*margin-right: 100px;*/
        margin-left: -4.95vw;
        font-style:italic;
        margin-top: -30px;
        text-align:center;
      }
      .send4 {
        position: absolute;
        /*left: -5.7vw;*/
        /*font-size: 18px;*/
        color: black;
        width: 15px;
        height: 15px;
        /*margin-right: 100px;*/
        margin-left: -9.62vw;
        font-style:italic;
        margin-top: 15px;
        text-align:center;
      }
      .send5{
        position: absolute;
        bottom: 15px;
        /*left: -5.7vw;*/
        /*font-size: 18px;*/
        color: black;
        width: 15px;
        height: 15px;
        /*margin-right: 100px-262px;*/
        /*margin-left: -72vw;*/
        /*font-style:italic;
        text-align:center;*/
      }
      .send_time{
      display: inline-block;
      position: relative;
      z-index: 4;
      left: 50%;
      transform: translateX(-50%);
      padding: 0vw 3.7777vw;
      /*margin-top:10px;
      margin-bottom: 10px;*/
      color:#aaa;
      font-weight: normal;
      font-size:10px;
      text-align: center;
      /*background-color: #d5d5d5;
      border-radius: 10px;*/
      height: 25px;
      line-height: 25px;
    }
    #shareMessage{
      position: relative;
      border-radius: 0 10px 10px 10px;
      /*display: inline-block;*/
      height: 70px;
      width: 205px;
      color: #AAAAAA;
      /*font-size: 12px;*/
      /*margin-bottom: 2.13vw;*/
      font-weight: bold;
    }
    .sharePic,.sharePic2{
      position: absolute;
      right:10px;
      top:10px;
      height: 50px;
      width:50px;
      background: no-repeat center center;
      background-size: cover;
    }
    .sharePic{
      border-radius: 10px 0 10px 10px;
    }
    .sharePic2{
      border-radius: 0px 10px 10px 10px;
    }
    .title{
      display: -webkit-box;
      position: relative;
      top: 10px;
      /*display: inline-block;*/
      left: 10px;
      /*margin-top: 15px !important;*/
     font-size: 12px;
      max-height: 40px;
      width: 105px;
      /*white-space: nowrap;*/
      overflow: hidden;
      text-overflow: ellipsis;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
    }
    .content_share{
      position: absolute;
      bottom:10px;
      left: 10px;
      /*margin-top: 5px;*/
      font-size: 10px;
      height: 15px;
      width: 130px;
      color:#aaa;
      font-weight: normal;
    }
    .aAnnouncement{
      width: 93%;
      margin: -19px auto 10px;
      /*min-height: 106px;*/
      background: white;
      /*border-radius: 10px;*/
      /*padding-bottom: 15px;*/
    }
  /*.avatar_share{
      position: relative;
      top:-22px;
      left:-58px;;
      width: 40px;
      height: 40px;
      margin: 2.66vw;
      margin-top: 0;
    }
    .avatar_share img{
      width: 100%;
      height: 100%;
      border-radius: 100%;
      object-fit: cover;
    }
    li{
    margin: 50px;
    }*/
    .announce{
      position: relative;
      /*top: 11px;*/
      /*width: 120px;*/
      margin: 0 auto;
      font-size: 12px;
      color: #101010;
      height: 24px;
      line-height: 24px;
      text-align: center;
      font-weight: bold;
    }
    .circle_left,.circle_right{
      border-radius: 50%;
      width: 8px;
      height: 8px;
      background: #81B2F3;
      margin-top: 8px;
    }
    .descriptio{
      /*height: 33px;*/
      width: 93%;
      margin: 3px auto 0;
      font-size: 10px;
      color: #AAA;
      text-align: center;
      /*font-weight: bold;*/
      overflow: hidden;
      word-wrap:break-word;
    }
    .ma{
      font-size:12px;
      position: relative;
      top: 1px;
    }
    .video{
      position: absolute;
      right: 20px;
      top: 20px;
      height: 30px;
      width: 30px;
      z-index: 999;
    }
    /*设置新消息红点样式*/
    .redBox{
  		position: fixed;
  		right: 50%;
  		bottom: 70px;
  		margin-right:-25px;
  		background-color: #F381A3;
  		height: 25px;
  		line-height: 23px;
  		width: 50px;
  		border-radius: 15px;
  		padding: 0.5vw 1.9vw;
  		color:white;
  		z-index: 999;
  		text-align: center;
  		font-size: 12px;
  		font-weight: bold;
  		/*-webkit-transform: translateY(0);*/
  		/*-webkit-overflow-scroll:touch;*/
  	}
  .dingwei{
    margin-top: -15px;
    margin-bottom: 10px;
    display:none;
  }
  .jiantou{
    transform:rotate(90deg);
    position: relative;
    bottom:0.5vw;
  }
  .sanjiaoxing{
    position: absolute;
    left:20px;
    bottom:-6.666px;
    height: 6.666px;
    width: 10px;
  }
  </style>
</head>

<body>
  <div class="bin2">
  </div>


  <div id="chat">
    <header @touchstart="closeEmo()">
      <span class="back" @click="closed"></span>
      <div class="info">
        <span class="nickname"  v-html='gname'></span>
      </div>
      <span class="more" @click="openGroup_serring"></span>
      <!--@click='moreList("open")'  -->
    </header>
    <div class="loading" v-show="isLoading">
      <img src="../../icon/messages/loading.gif" style="width: 13.33vw;height: 13.33vw;" />
    </div>
    <!-- 未读消息红点 -->
    <div class="redBox" @click='zhiding()' v-if='redBoxVal>0'><img class="sanjiaoxing" src="../../icon/sanjiaoxing.png">NEW</div>
    <div class="main" id="main" @touchstart="closeEmo()">
      <!-- <div class="aAnnouncement">
          <div class="announce">
              <div class="circle_left" style="display:inline-block;margin-right:10px;"></div>
              <span class="cement">Announcement</span>
              <div class="circle_right" style="display:inline-block;margin-left:9px;"></div>
          </div>
          <p class="descriptio" v-if="group.descriptio!=null">{{group.descriptio}}</p>
          <p class="descriptio" v-else-if="group.descriptio==null">{{fun}}</p>
      </div> -->
      <!-- 顶部群公告 -->
        <div class="aAnnouncement" style="width:100% !important;margin-bottom:34px;border-radius:0;margin-top:-10px;">
            <div class="announce">
                <div class="circle_left" style="display:inline-block;margin-right:7px;"></div>
                <div class="circle_left" style="display:inline-block;margin-right:7px;"></div>
                <div class="circle_left" style="display:inline-block;margin-right:7px;"></div>
                <span class="cement">Announcement</span>
                <div class="circle_right" style="display:inline-block;margin-left:7px;"></div>
                <div class="circle_right" style="display:inline-block;margin-left:7px;"></div>
                <div class="circle_right" style="display:inline-block;margin-left:7px;"></div>
            </div>
            <p class="descriptio" v-if="group.descriptio!=null&&group.descriptio!=''">{{group.descriptio}}</p>
            <p class="descriptio" v-else-if="group.descriptio==null||group.descriptio==''">{{fun}}</p>
            <!-- <div class="tips tips2" id='bin' style="margin-top:10px;">
              {{sevenhis}}
            </div> -->
        </div>
      <div class="message-date">

        <!-- 加载历史消息转圈   -->
        <div class="dingwei">
          <!-- {{seve<img class="send3" :src="(msg.msg_body.extras.fail!='1')?('../../icon/messages/send2.png'):('../../icon/messages/loading.gif')"/>nhis}} -->
          <img class="tips1" src="../../icon/messages/loading.gif"/>
        </div>

       <ul class="message-wrap bin1" v-for="(msg,index) in messageArrfen" >	<!-- v-if="index>=messageArr.length-number" -->
         <!-- v-show="showMessagetime(msg.create_time,index)!=''" -->
          <li style="margin-bottom:18px !important;margin-top:-25px !important;" v-show="showMessagetime(msg.create_time,index)!=''" ><div class="send_time" v-if="msg.target_id==ownGroupId" style="text-align:center;" v-html='showMessagetime(msg.create_time,index)'></div></li>
          <li v-if="msg.msg_body.extras.type==notice">
            <div class="aAnnouncement" style="width:100vw;margin-bottom:15px;transform:translateX(-4.5vw);background:white;">
                <div class="announce" >
                    <div class="circle_left" style="display:inline-block;margin-right:7px;"></div>
                    <div class="circle_left" style="display:inline-block;margin-right:7px;"></div>
                    <div class="circle_left" style="display:inline-block;margin-right:7px;"></div>
                    <span class="cement">Announcement</span>
                    <div class="circle_right" style="display:inline-block;margin-left:7px;"></div>
                    <div class="circle_right" style="display:inline-block;margin-left:7px;"></div>
                    <div class="circle_right" style="display:inline-block;margin-left:7px;"></div>
                </div>
                <p class="descriptio" v-if="msg.msg_body.extras.type==notice">{{msg.msg_body.extras.content}}</p>
                <!-- <p class="descriptio" v-else-if="group.descriptio==null">{{fun}}</p> -->
                <!-- <p class="translated" v-if="msg.msg_body.extras.type==notice&&msg.translated" v-html='showMessage2(msg)' @click="copy(event,index)">翻译</p> -->
            </div>
          </li>
   <!-- 自己的信息 -->
          <li  class="message message-left" v-if="msg.from_id==ownId&&msg.target_id==ownGroupId&&msg.msg_body.extras.type==txt" style="transform:translateX(15px);margin-top:-10px !important;">
            <div class="content">
              <!-- <img width="15" height="15" class="send" src="../../icon/messages/send2.png" style="display:inline-block"/> -->
              <p style="margin-bottom:15px;" class="content-text-right"  v-html='showMessage(msg)' @click="translateLang3(index)" @touchstart="gtouchstart(event,index,1)" @touchmove="gtouchmove()" @touchend="gtouchend(index)">内容</p>
              <p class="translated" v-if="msg.msg_body.extras.type==txt&&msg.translated" v-html='showMessage2(msg)' @click="copy(event,index)" style="margin-top:-10px;">翻译</p>
                <img class="send3" :src="(msg.msg_body.extras.fail!='1')?('../../icon/messages/send2.png'):('../../icon/messages/loading.gif')"/>
            </div>
            <div class="avatar">
              <img style="background:black;" :src="'http://bin.baopinghui.com/'+avatar+'?imageView2/0/w/100'" alt="" />
            </div>
          </li>
          <!-- 自己的语音   旧版本格式-->
          <li class="message message-left" v-if="msg.from_id==ownId&&msg.target_id==ownGroupId&&msg.msg_body.extras.type=='voice'&&msg.msg_body.extras.url==null" style="margin-top:-10px !important;transform:translateX(15px);">
            <div class="content">
              <!-- <img width="15" height="15" class="send" src="../../icon/messages/send2.png" style="display:inline-block"/> -->
              <div style="display:inline-block;margin-bottom:12px;padding:6px 15px;" class="content-text-right"   @click="xiazai(msg.msg_body.text,index,msg.msg_body.extras.duration)"  @touchstart="gtouchstart(event,index,2)" @touchmove="gtouchmove()" @touchend="gtouchend(index)">
                <img class="send4" :src="(msg.msg_body.extras.fail!='1')?('../../icon/touming.png'):('../../icon/messages/loading.gif')" />
                <p class="send1"  v-html='msg.msg_body.extras.duration+"\""'>	</p>


                  <!-- <img class="hong" src="../../icon/3.png" /> -->
                  <div class="abin1 " :style="{width:(msg.msg_body.extras.duration>=10)?140+'px':(msg.msg_body.extras.duration)*10+30+'px'}">
                  <img class="binimg" src='../../icon/icon-chat-voice-GIF2.gif'></img>
                  </div>
                  <div class="abin3" :style="{width:(msg.msg_body.extras.duration>=10)?140+'px':(msg.msg_body.extras.duration)*10+30+'px'}">
                <img  class="binimg" src='../../icon/icon-chat-voice-white3x2.png'></img>
                  </div>

              </div>

            </div>
            <div class="avatar">
              <img  :src="'http://bin.baopinghui.com/'+avatar+'?imageView2/0/w/100'" alt="" />
            </div>
          </li>
        <!-- 语音  新版本兼容ios格式 -->
          <li class="message message-left" v-if="msg.from_id==ownId&&msg.target_id==ownGroupId&&msg.msg_body.extras.type=='voice'&&msg.msg_body.extras.url!=null" style="margin-top:-10px !important;transform:translateX(15px);">
            <div class="content">
              <!-- <img width="15" height="15" class="send" src="../../icon/messages/send2.png" style="display:inline-block"/> -->
              <div style="display:inline-block;margin-bottom:12px;padding:6px 15px;" class="content-text-right"   @click="xiazai(msg.msg_body.text.extras.url,index,msg.msg_body.extras.duration)"  @touchstart="gtouchstart(event,index,2)" @touchmove="gtouchmove()" @touchend="gtouchend(index)">
                <img class="send4" :src="(msg.msg_body.extras.fail!='1')?('../../icon/touming.png'):('../../icon/messages/loading.gif')" />
                <p class="send1"  v-html='msg.msg_body.extras.duration+"\""'>	</p>


                  <!-- <img class="hong" src="../../icon/3.png" /> -->
                  <div class="abin1 " :style="{width:(msg.msg_body.extras.duration>=10)?140+'px':(msg.msg_body.extras.duration)*10+30+'px'}">
                  <img class="binimg" src='../../icon/icon-chat-voice-GIF2.gif'></img>
                  </div>
                  <div class="abin3" :style="{width:(msg.msg_body.extras.duration>=10)?140+'px':(msg.msg_body.extras.duration)*10+30+'px'}">
                <img  class="binimg" src='../../icon/icon-chat-voice-white3x2.png'></img>
                  </div>

              </div>

            </div>
            <div class="avatar">
              <img  :src="'http://bin.baopinghui.com/'+avatar+'?imageView2/0/w/100'" alt="" />
            </div>
          </li>

          <!--自己发的分享链接-->
          <li @click="openDetail(msg.msg_body.extras.postId,msg.msg_body.extras.otherId)" v-if="msg.from_id==ownId&&msg.target_id==ownGroupId&&msg.msg_body.extras.type=='share'" class="message message-left" style="border-radius:10px;margin-top:-10px !important;transform:translateX(15px);">
            <div class="content">
              <div id="shareMessage" style="background:#484848;border-radius:10px 0 10px 10px;margin-bottom:15px !important;margin-top:0px !important;">
                <img class="video" src="../../icon/Video.png" v-if="msg.msg_body.extras.post_type=='Video'">
                <!-- <img class="sharePic" :src=msg.msg_body.extras.img></img> -->
                <span class="sharePic" :style="sharePic(msg.msg_body.extras.img)"></span>
                  <p class="title" style="color:white">{{msg.msg_body.extras.title}}</p>
                  <p class="content_share"><span class="ma">©</span>{{msg.msg_body.extras.postUsername}}</p>
              </div>
            </div>
            <div class="avatar">
              <img  :src="'http://bin.baopinghui.com/'+avatar+'?imageView2/0/w/100'" alt="" />
            </div>
          </li>
          <!-- 自己的图片  原本格式-->
          <li class="message message-left" v-else-if="msg.from_id==ownId&&msg.target_id==ownGroupId&&msg.msg_body.extras.type==img&&msg.msg_body.extras.url==null" style="margin-top:-10px !important;margin-right:-18px;transform:translateX(15px);border-radius:8px;">
          <div style="margin-right:20px;"><img class="send5" :src="(msg.msg_body.extras.fail!='1')?('../../icon/messages/send2.png'):('../../icon/messages/loading.gif')" /></div>
            <img class="msg_img" :src="msg.msg_body.text+'?imageView2/0/w/250/auto-orient'" @click='sacnImage(msg.msg_body.text)' style="border-top-right-radius: 0!important;margin-bottom:15px;" @touchstart="gtouchstart(event,index,3)" @touchmove="gtouchmove()" @touchend="gtouchend(index)"/>
            <!-- <img class="msg_img2" src="../../icon/messages/enlarge.png" / style="right: 19vw;"> -->

            <div class="avatar">
              <img  :src="'http://bin.baopinghui.com/'+avatar+'?imageView2/0/w/100'" alt="" />
            </div>
            <!-- <img class="send" src="../../icon/messages/send2.png" /> -->
          </li>
          <!--图片 兼容ios 格式 -->
          <li class="message message-left" v-else-if="msg.from_id==ownId&&msg.target_id==ownGroupId&&msg.msg_body.extras.type==img&&msg.msg_body.extras.url!=null" style="margin-top:-10px !important;margin-right:-18px;transform:translateX(15px);border-radius:8px;">
          <div style="margin-right:20px;"><img class="send5" :src="(msg.msg_body.extras.fail!='1')?('../../icon/messages/send2.png'):('../../icon/messages/loading.gif')" /></div>
            <img class="msg_img" :src="msg.msg_body.extras.url+'?imageView2/0/w/250/auto-orient'" @click='sacnImage(msg.msg_body.extras.url)' style="border-top-right-radius: 0!important;margin-bottom:15px;" @touchstart="gtouchstart(event,index,3)" @touchmove="gtouchmove()" @touchend="gtouchend(index)"/>
            <!-- <img class="msg_img2" src="../../icon/messages/enlarge.png" / style="right: 19vw;"> -->

            <div class="avatar">
              <img  :src="'http://bin.baopinghui.com/'+avatar+'?imageView2/0/w/100'" alt="" />
            </div>
            <!-- <img class="send" src="../../icon/messages/send2.png" /> -->
          </li>
          <br />

          <!-- 自己发的群分享链接 -->
          <li @click="openGroup(msg)" v-if="msg.from_id==ownId&&msg.target_id==ownGroupId&&msg.msg_body.extras.type=='shareGroup'" class="message message-left" style="border-radius:10px;margin-top:-8.5vw !important;transform:translateX(15px);padding-bottom:0vw !important;margin-bottom:5vw !important;">
            <div class="content">
              <div id="shareMessage" style="background:#484848;border-radius:10px 0 10px 10px;margin-bottom:15px !important;margin-top:0px !important;">
                <span class="sharePic" :style="getPic(msg.msg_body.extras.avatar_url)"></span>
                  <p class="title" style="color:white;font-size:10px;font-weight:normal;" v-html="judS(msg.msg_body.extras.txt,'')"></p>
                  <p class="content_share" v-html="'#'+judS('',msg.msg_body.extras.nickname)"></p>
              </div>
            </div>
            <div class="avatar">
              <img  :src="'http://bin.baopinghui.com/'+avatar+'?imageView2/0/w/100'" alt="" />
            </div>
          </li>
          <!-- 别人发的群分享链接 -->
          <li @click="openGroup(msg)" v-if="msg.from_id!=ownId&&msg.target_id==ownGroupId&&msg.msg_body.extras.type=='shareGroup'" class="message message-right" style="transform:translate(-16px,-30px);">
            <div class="avatar">
              <img :src="'http://bin.baopinghui.com/'+avatar_your(msg,index)+'?imageView2/0/w/100'" alt="" v-on:click="openHome(msg.from_id)" @touchstart="gtouchstart(event,index,4)" @touchmove="gtouchmove()" @touchend="gtouchend(index)"/>
            </div>
            <div class="content">
              <p class="content-name" v-html='nickname_your(msg)'></p>
              <div id="shareMessage" style="background:#efefef;margin-top:0px;margin-bottom:5px;">
                <span class="sharePic2" :style="getPic(msg.msg_body.extras.avatar_url)"></span>
                  <p class="title"style="color:black;font-size:10px;font-weight;normal;" v-html="judS(msg.msg_body.extras.txt,'')"></p>
                  <p class="content_share" v-html="'#'+judS('',msg.msg_body.extras.nickname)"></p>
              </div>
            </div>
          </li>
          <!-- 别人发的分享链接 -->
          <li @click="openDetail(msg.msg_body.extras.postId,msg.msg_body.extras.otherId)" v-if="msg.from_id!=ownId&&msg.target_id==ownGroupId&&msg.msg_body.extras.type==share" class="message message-right" style="transform:translate(-16px,-30px);">
            <div class="avatar">
              <img :src="'http://bin.baopinghui.com/'+avatar_your(msg,index)+'?imageView2/0/w/100'" alt="" v-on:click="openHome(msg.from_id)" @touchstart="gtouchstart(event,index,4)" @touchmove="gtouchmove()" @touchend="gtouchend(index)"/>
            </div>
            <div class="content">
              <p class="content-name" v-html='nickname_your(msg)'></p>
              <div id="shareMessage" style="background:#efefef;margin-top:0px;margin-bottom:5px;">
                <img class="video" src="../../icon/Video.png" v-if="msg.msg_body.extras.post_type=='Video'">
                <!-- <img class="sharePic2" :src=msg.msg_body.extras.img></img> -->
                <span class="sharePic2" :style="sharePic(msg.msg_body.extras.img)"></span>
                  <p class="title"style="color:black;">{{msg.msg_body.extras.title}}</p>
                  <p class="content_share"><span class="ma">©</span>{{msg.msg_body.extras.postUsername}}</p>
              </div>
            </div>
          </li>
          <!-- 别人发的语音  原格式 -->
          <li class="message message-right " v-if="msg.from_id!=ownId&&msg.target_id==ownGroupId&&msg.msg_body.extras.type=='voice'&&msg.msg_body.extras.url==null" style="transform:translate(-16px,-30px);" >

            <div class="avatar">
              <img :src="'http://bin.baopinghui.com/'+avatar_your(msg,index)+'?imageView2/0/w/100'" alt="" v-on:click="openHome(msg.from_id)" @touchstart="gtouchstart(event,index,4)" @touchmove="gtouchmove()" @touchend="gtouchend(index)"/>
            </div>
            <div  class="content">
              <p class="content-name" v-html='nickname_your(msg)'></p>
              <div class="content-text-left "  style="display:inline-block;margin-right:4px;margin-bottom:0px;padding:6px 15px;"   @click="xiazai(msg.msg_body.text,index,msg.msg_body.extras.duration)"  @touchstart="gtouchstart(event,index,2)" @touchmove="gtouchmove()" @touchend="gtouchend(index)">
                <p class="send2"  v-html='msg.msg_body.extras.duration+"\""' :style="{marginLeft:(msg.msg_body.extras.duration>=10)?(260+'px'):((msg.msg_body.extras.duration)*10+150+'px')}"></p><!--: -->
                  <div class="abin1" :style="{width:(msg.msg_body.extras.duration>=10)?140+'px':(msg.msg_body.extras.duration)*10+30+'px'}">
                    <img class="binimg_left" src='../../icon/icon-chat-voice-GIF-black.gif'></img>
                  </div>
                  <div class="abin3" :style="{width:(msg.msg_body.extras.duration>=10)?140+'px':(msg.msg_body.extras.duration)*10+30+'px'}">
                <img class="binimg_left" src='../../icon/icon-chat-voice-black@3x2.png'></img>
                  </div>
              </div>

            </div>

          </li>
            <!-- 别人发的语音  兼容ios格式-->
          <li class="message message-right " v-if="msg.from_id!=ownId&&msg.target_id==ownGroupId&&msg.msg_body.extras.type=='voice'&&msg.msg_body.extras.url!=null" style="transform:translate(-16px,-30px);" >

            <div class="avatar">
              <img :src="'http://bin.baopinghui.com/'+avatar_your(msg,index)+'?imageView2/0/w/100'" alt="" v-on:click="openHome(msg.from_id)" @touchstart="gtouchstart(event,index,4)" @touchmove="gtouchmove()" @touchend="gtouchend(index)"/>
            </div>
            <div  class="content">
              <p class="content-name" v-html='nickname_your(msg)'></p>
              <div class="content-text-left "  style="display:inline-block;margin-right:4px;margin-bottom:0px;padding:5px 15px;"   @click="xiazai(msg.msg_body.extras.url,index,msg.msg_body.extras.duration)"  @touchstart="gtouchstart(event,index,2)" @touchmove="gtouchmove()" @touchend="gtouchend(index)">
                <p class="send2"  v-html='msg.msg_body.extras.duration+"\""' :style="{marginLeft:(msg.msg_body.extras.duration>=10)?(260+'px'):((msg.msg_body.extras.duration)*10+150+'px')}"></p><!--: -->
                  <div class="abin1" :style="{width:(msg.msg_body.extras.duration>=10)?140+'px':(msg.msg_body.extras.duration)*10+30+'px'}">
                    <img class="binimg_left" src='../../icon/icon-chat-voice-GIF-black.gif'></img>
                  </div>
                  <div class="abin3" :style="{width:(msg.msg_body.extras.duration>=10)?140+'px':(msg.msg_body.extras.duration)*10+30+'px'}">
                <img class="binimg_left" src='../../icon/icon-chat-voice-black@3x2.png'></img>
                  </div>
              </div>

            </div>

          </li>
          <!-- 别人发的图片 原格式 -->
              <li class="message message-right " v-else-if="msg.from_id!=ownId&&msg.target_id==ownGroupId&&msg.msg_body.extras.type==img&&msg.msg_body.extras.url==null" style="transform:translate(-16px,-30px);border-radius:8px;">
                <div class="avatar">
                  <img  :src="'http://bin.baopinghui.com/'+avatar_your(msg,index)+'?imageView2/0/w/100'" alt="" v-on:click="openHome(msg.from_id)" @touchstart="gtouchstart(event,index,4)" @touchmove="gtouchmove()" @touchend="gtouchend(index)"/>
                </div>
                <div  class="content" >
                  <p class="content-name" v-html='nickname_your(msg)' ></p>
                  <img class="msg_img" :src="msg.msg_body.text+'?imageView2/0/w/250'" @click='sacnImage(msg.msg_body.text)' style="border-top-left-radius: 0!important;margin-bottom:5px;" @touchstart="gtouchstart(event,index,3)" @touchmove="gtouchmove()" @touchend="gtouchend(index)"/>
                  <!-- <img class="msg_img2" src="../../icon/messages/enlarge.png" /> -->
                </div>

              </li>
        <!-- 别人发的图片 兼容ios格式 -->
              <li class="message message-right " v-else-if="msg.from_id!=ownId&&msg.target_id==ownGroupId&&msg.msg_body.extras.type==img&&msg.msg_body.extras.url!=null" style="transform:translate(-16px,-30px);border-radius:8px;">
                <div class="avatar">
                  <img  :src="'http://bin.baopinghui.com/'+avatar_your(msg,index)+'?imageView2/0/w/100'" alt="" v-on:click="openHome(msg.from_id)" @touchstart="gtouchstart(event,index,4)" @touchmove="gtouchmove()" @touchend="gtouchend(index)"/>
                </div>
                <div  class="content" >
                  <p class="content-name" v-html='nickname_your(msg)' ></p>
                  <img class="msg_img" :src="msg.msg_body.extras.url+'?imageView2/0/w/250'" @click='sacnImage(msg.msg_body.extras.url)' style="border-top-left-radius: 0!important;margin-bottom:5px;" @touchstart="gtouchstart(event,index,3)" @touchmove="gtouchmove()" @touchend="gtouchend(index)"/>
                  <!-- <img class="msg_img2" src="../../icon/messages/enlarge.png" /> -->
                </div>
              </li>

              <!-- 别人的信息 -->
              <li class="message message-right " v-if="msg.from_id!=ownId&&msg.target_id==ownGroupId&&msg.msg_body.extras.type==txt" style="transform:translate(-16px,-30px);" >

                <div class="avatar">
                  <img :src="'http://bin.baopinghui.com/'+avatar_your(msg,index)+'?imageView2/0/w/100'" alt="" v-on:click="openHome(msg.from_id)" @touchstart="gtouchstart(event,index,4)" @touchmove="gtouchmove()" @touchend="gtouchend(index)"/>
                </div>
                <div  class="content">
                  <p class="content-name" v-html='nickname_your(msg)'></p>
                  <p class="content-text-left " v-html='showMessage(msg)' style="display:inline-block;margin-right:4px;margin-bottom:5px;"  @click="translateLang3(index)" @touchstart="gtouchstart(event,index,1)" @touchmove="gtouchmove()" @touchend="gtouchend(index)">内容</p>
                  <!-- <img width="15" height="15" class="send" src="../../icon/messages/send2.png" style="display:inline-block"/> -->
                  <p class="translated" v-if="msg.msg_body.extras.type==txt&&msg.translated" v-html='showMessage2(msg)' @click="copy(event,index)">翻译</p>
                </div>

              </li>
        </ul>

      </div>

    </div>

    <!--翻译-->
    <!-- <div class="more-list" @click="dispNone" v-show="moreListShow">
      <ul class="list-content">
        <li class="list-title">Automatic Translation</li>
        <li class="btn" @click='selectLang("zh")'>繁体中文</li>
        <li class="btn" @click='selectLang("en")'>English</li>
        <li class="btn" @click='selectLang("kor")'>한국의</li>
        <li class="btn" @click='selectLang("th")'>ภาษาไทย</li>
        <li class="btn" @click='selectLang("jp")' style="border-bottom-left-radius:13px;border-bottom-right-radius:13px;">
          日本語
        </li>
        <li class="cancel">Cancel</li>
      </ul>
    </div> -->

  </div>

</body>
	<script src="../../json/api.json"></script>
	<script src="../../json/router.json"></script>
	<script src="../../script/vue.js" type="text/javascript" charset="utf-8"></script>
	<script src="../../script/api.js" type="text/javascript" charset="utf-8"></script>
	<script src="../../script/public.js" type="text/javascript" charset="utf-8"></script>
	<script src="../../script/md5.js" type="text/javascript" charset="utf-8"></script>
	<script src="../../image/emotion/emotion.json" charset="utf-8"></script>
  <script src="../../script/jquery-3.1.0.min.js" type="text/javascript"></script>
	<script src="../../image/emotion/emotion2.json" charset="utf-8"></script>
	<script src="../../script/base64.min.js" type="text/javascript" charset="utf-8"></script>
	<script src="../../script/jmessage-sdk-web.2.6.0.min.js" type="text/javascript" charset="utf-8"></script>
	<script src="../../script/nav.js" type="text/javascript" charset="utf-8"></script>
  <script type="text/javascript">
  var failS=[];//用来储存未登录极光发送信息失败是发送失败的信息消息
  var failtoggle=true; //用于分辨是否开启失败消息重发功能；
  	var toggle6=0;//记录时间显示的的上一条先显示的坐标；
    var toggle8=true;//代表还有下拉历史消息的存在。
    var toggle10=true; //用来代表下拉加载历史消息是否触发事件
    var changeDesc=false;
    var chat; //这个new一个全局对象
    var ms=[];
    var ms2=[];
    var changeDesc=false;
    var db;//数据模块插件对象
    var tempGMs=(typeof($api.getStorage("tempGMs"))!="undefined")?$api.getStorage("tempGMs"):[]; //临时历史消息储存
    var openHometoggle=true;//是否可以打开该人的主页
    var number=1;//当如果超过7天前获取历史的
    var start=new Date();//开始的时间
    var invalidvoice=false;//是否为无效语音
  var warn_text = {
    luzhi: '../../icon/luzhiE.gif',
    quxiao: '../../icon/quxiaoE.gif',
    tingtong:'receiver',
    yangshengqi:'loudspeaker',
    yuzhuanwen:'Phonetic transcribing',
    short:'The recording time is too short',
    long:'The recording was too long',
    shuohua: 'HOLD DOWN THE TALK',
    songkai:'Loosen the end',
    send:'send',
    tishiyu: 'Your operation is a little fast, please slow down and try again',
    text1:'Your network is disconnected( •̥́ ˍ •̀ू )',
 	  text2: 'Pretend not to care',
 	  text3:'⚆_⚆？I can\'t help it',
    text4:'Silently leave',
    text5:'You no longer seem to be in this group'
  }
  if($api.getStorage("language") == "zho") {
      warn_text = {
        luzhi: '../../icon/luzhi.gif',
        quxiao: '../../icon/quxiao.gif',
        tingtong:'听筒',
        short:'录制时间太短',
        long:'录制时间过长',
        yangshengqi:'扬声器',
        yuzhuanwen:'语音转文字',
        shuohua: '按住 说话',
        songkai: '松开 结束',
        send:'发送',
        tishiyu: '您的操作有点快,麻烦慢点再试 一下',
        text1:'您的网络已经断开( •̥́ ˍ •̀ू )',
				text2: '假装不在意',
				text3:'⚆_⚆？我也帮不了',
        text4:'默默离开',
        text5:'您似乎已不在该群中'
      };
      $(".cement").html("群 公 告");
    }
    function openDetail(postId,otherId){//打开帖子详情页
        api.openWin({
            name: "detail",
            url: "widget://html/details/detail.html",
            reload: true,
            vScrollBarEnabled: false,
            slidBackEnabled: false,
            pageParam:{
                postId: postId,
                otherId: otherId
                // popNum: popNum,
                // tinNum: tinNum,
                // summary: summary,
                // text: isText
            }
        });
    };
    var hhh =window.screen.height;
    	var www =window.screen.width;
      var now = new Date();
    var jointime=new Date(now.getTime() - 6 * 24 * 3600 * 1000);//没有进群时间则使用6天前的日期
  apiready = function() {
    db=api.require("db"); //引入数据库模块
    db.selectSql({
        name: 'tinkle',
        sql: "select * from joingroup where userid='"+$api.getStorage('id')+"' and gid='"+api.pageParam['gid']+"' order by jointime desc limit 0,1"
    }, function(ret, err){
        if( ret.status ){
          if(ret.data.length>0){ //有进群时间则使用进入日期  作用是为了让刚进群的看不到以前的历史消息
                jointime=parseInt(ret.data[0].jointime);

          }
        }
    });
    //监听群分享成功后同步更新chat.messageArr
     api.addEventListener({
         name: 'groupMessage'
     }, function(ret, err){
         if( ret ){
           //获取群分享成功后群的信息
           var msg = ret.value.msg;
           var text = msg.text;
           var gid = msg.extras.gid;
           var avatar_url = msg.extras.avatar_url;
           var nickname = msg.extras.nickname;
           var txt = msg.extras.txt;
           var key = msg.extras.key;
           var target_gname = msg.extras.target_gname;
           var describe = msg.extras.describe;
              chat.failSendMessageBody(text,'shareGroup',1,"","",gid,avatar_url,nickname,txt,key,target_gname,describe);
         }
     });
    //语音ios的间距跟安卓不一样
    if(api.systemType=='ios'){
      $('.send2').css('margin-top','2.2px');
      $('.send2').css('left','-78px');
      $('.send1').css('top','1.9vw');
    }

        sendwelcome();//新进来的发送问候消息
        // setTimeout(function(){
        //   //进来就获取表情包
        //   getEmo();
        // },50)
    // alert(api.pageParam['gid'])
    //获取群的所有信息
          api.ajax({
              url: 'http://api.baopinghui.com/jpushim/findnewbin4',
              method: 'get',
              data: {
                  values: {
                      gid: api.pageParam['gid']
                  }
              }
          },function(ret, err){
              if (ret) {
                  // alert(JSON.stringify(ret));
                  chat.group = ret.data;
              }
          });
    //判断是否是在用户是不是在该群
    api.ajax({
        url: 'http://api.baopinghui.com/jpushim/findnewbin3',
        method: 'post',
        data: {
            values: {
                gid:api.pageParam['gid'],
                uiid:$api.getStorage('id')


            }
        }
    },function(ret, err){
        if (ret) {
            // alert( JSON.stringify( ret ) );
            //false代表不再该群中，弹出警告窗口，退出该群
            if(ret.data==false){

              api.openFrame({
                  name: 'duanwang',
                  url: '../logon-register/pop.html',

                  pageParam: {
                      data: warn_text.text5,
                      value: warn_text.text4,
                       none: warn_text.text3,
                       statu:1,
                       gid:api.pageParam['gid']
                  },
                  bounces: true,
                  bgColor: 'rgba(0,0,0,0)',
                  vScrollBarEnabled: true,
                  hScrollBarEnabled: true
              });
            // api.closeWin({});



            }
        } else {

        }
    });




  	if(hhh/www>2){
				$api.css($api.dom('header'), 'height:25.27vw;padding:40px 2.66vw 15px 2.6vw;');
			}
    gid=api.pageParam['gid'];
    gname=api.pageParam['gname'];


    var par = Base64.encode('c46c8bc128f41299334ec8e3:269e7aa2881b1a8767f16ce6'); //base64加密
    UIChatBox = api.require('UIChatBox'); //输入框模块
    imageBrowser = api.require('imageBrowser');
  	audioStreamer = api.require('audioStreamer');
    qiniu = api.require('qiniuUpfile'); //七牛云模块
    bin1=$api.dom(".bin2");
    toggle1=-1;
    errhistory='';
    toggle4=true;//用来判断是否有执行最初缓存群头像和昵称的请求
    var iosH = 0;
    var moveLock = true;
    var msgContent = "";
    var time = "";
    var from_id = "";
    var avatarobj_len="";
    var avatarobj={};
    var timeOutEvent;
    var extraArray=[];//临时数组
    var toggle=true;//判断是否是刷新页面还是初始化极光
    var groupMember1=api.pageParam['gid']+'Member';//用于存储群内的的成员的缓存名
    var groupMessages=api.pageParam['gid']+'Messages3';
    var groupsendtext=api.pageParam['gid']+'Text';//用于存储未发送的草稿
    var toggle3='';
    setTimeout(function(){
        chat.created();
          // initziji();
    },70);
    // setInterval('rejim_init()',1*60*1000);//定时确定是否要登录极光


    if(typeof($api.getStorage(groupMember1))!="undefined"){
      // //alert("不为空");
       avatarobj=$api.getStorage(groupMember1);
    };
    var now = new Date();
    var jointime=new Date(now.getTime() - 6 * 24 * 3600 * 1000);
      // //alert(jointime);

    // var sendtext;
    var continuegain=false;//用于继续给messageArrfen赋值

    // //alert(now-jointime);
    // //alert(jointime);
    var sj = getNowFormatDate(); //获取当前日期
    var sj2 = getNowFormatDate2(); //获取7天前的日期
    var networkDes="";
    if($api.getStorage("language") == "zho"){
      networkDes="您的当前网络不可用";
    }else{
      networkDes="Your current network is not available";
    }

    api.sendEvent({
        name: 'CObject',
        extra: {
            key1: '4',
            key2: api.pageParam['gid']
        }
    });

    //监听网络的情况是否没网
                api.addEventListener({
              name:'offline'
          }, function(ret, err){
            api.openFrame({
                name: 'duanwang',
                url: '../logon-register/pop.html',

                pageParam: {
                    data: warn_text.text1,
                    value: warn_text.text2,
                     none: warn_text.text3
                },
                bounces: true,
                bgColor: 'rgba(0,0,0,0)',
                vScrollBarEnabled: true,
                hScrollBarEnabled: true
            });

          });
          //监听是否来网了
        api.addEventListener({
            name:'online'
        }, function(ret, err){
          //重新刷新页面
              history.go(0);
            api.closeFrame({
                name: 'duanwang'
            });

        });
        // api.addEventListener({   //监听是不是滚到顶部或底部 到底部隐藏红点
        //     name:'scrolltobottom',
        //     extra:{
        //         threshold:0           //设置距离底部多少距离时触发，默认值为0，数字类型
        //     }
        // }, function(ret, err){
        //   // alert("1");
        //   var main=$api.dom('.main'); //scrollTop滚动现在的顶部位置  clientHeight这个dom的高度 scrollHeight可以滚动的总长度
        //
        //   if(main.scrollTop+main.clientHeight>main.scrollHeight-160){  //判断是否接近底部
        //     chat.redBoxVal=0; //未读数红点隐藏
        //
        //   }else{     //滑动到顶部继续加载历史消息
        //
        //      if(toggle8){     //如果已没有历史消息了就不显示转圈加载
        //        $(".dingwei").css('display', 'block');
        //      }
        //
        //     // alert("aaa");
        //     setTimeout(function(){
        //       chat.dingwei();
        //         // alert("2");
        //        $(".dingwei").css('display', 'none');
        //     },300)
        //
        //   }
        //
        //
        // });



//iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
if(JSON.stringify(avatarobj) == '{}'){
  toggle4=false;
console.log("*********************开始缓存成员头像昵称信息");
jQuery(function (){
jQuery.ajax({
  url: 'http://api.baopinghui.com/jpushim/findnewbin2',
  type: 'GET',
  async: true,
  data: {
    gid:api.pageParam['gid']
 },
 success:function (ret){
           avatarobj_len=ret.data.list.length;
           ////alert(JSON.stringify( avatarobj[data.member_list[0].username]));
           for(var i=0;i<avatarobj_len;i++){
             if(ret.data.list[i]!=null){
               avatarobj[ret.data.list[i].id]={avatar_url:ret.data.list[i].avatar_url,nickname:ret.data.list[i].nickname};
             }
          }
          var groupMember=api.pageParam['gid']+'Member';
          // //alert(groupMember);
            $api.setStorage(groupMember, avatarobj);
console.log("*********结束************缓存成员头像昵称信息");
                 var b=chat.messageArrfen;
                 chat.messageArrfen=[];
                 chat.messageArrfen=b;

 }
});
});
}










    //
    //
    //翻译文字   word:翻译的文本   target:信息对象
    function translate(word, target, context_type) {
      //				if(target.context_type == 'audio' || target.context_type == 'video') {
      //					return;
      //				}
      // var content_no = word.replace(/\uD83C[\uDF00-\uDFFF]|\uD83D[\uDC00-\uDE4F]|\[(.*?)\]/g, "");
      var content_no = word.replace(/\uD83C[\uDF00-\uDFFF]|\uD83D[\uDC00-\uDE4F]/g, " ");
          // content_no = content_no.replace(/\r|\n|&nbsp;/g," ");
      var salt = (new Date).getTime();

      // var str1 = json['baidu_appid'] + word + salt + json['baidu_key'];
      var str1 = "20161226000034707" + content_no + salt + "i1XmNFcDa7_Z4i6jUSZA";
      var sign = MD5(str1);
      api.ajax({
        url: 'http://api.fanyi.baidu.com/api/trans/vip/translate',
        method: 'post',
        data: {
          values: {
            q: content_no,
            //appid: "20170419000045193",
            appid: "20161226000034707",
            salt: salt,
            from: "auto",
            to: chat.translateLang,
            sign: sign
          }
        }
      }, function(data, err) {
        //alert(JSON.stringify(data));
        //  alert(JSON.stringify(data));
        if(data && data['trans_result']) {

          // target.translated = "" + data['trans_result'][0]['dst'] + "";
          var strings='';
          for(var i=0;i<data['trans_result'].length;i++){
                strings=strings+data['trans_result'][i]['dst'];
          }
          target.translated=strings;
        } else {
          console.log(JSON.stringify(err) + '===翻译函数这里');
        }
        // msgToTop();
      });
    }

  var connectionType = api.connectionType;//你的当前网络状态
    //  alert(connectionType);
  if(connectionType==="none"){
    // alert("奇怪");
    setTimeout(function(){
      api.toast({
          msg: networkDes,
          duration: 2000,
          location: 'middle'
      });

       msgToTop();
      chat.isLoading = false;
       $(".main").css('opacity', '1');
    },2000)

  }




//监听是是否打开了单聊页面，监听来源是home.html
api.addEventListener({
    name: 'openchat2'
}, function(ret, err){
    if( ret ){
      //alert("监听到了");
      api.closeWin({
      });


    }else{

    }
});

//添加事件监听，用户监听选择要翻译的语言，事务来源是recommend_list3.html

 api.addEventListener({
     name: 'translateLang'
 }, function(ret, err){
     if( ret ){
       chat.translateLang=ret.key1

     }else{
          // //alert( JSON.stringify( err ) );
     }
 });
 //添加事件监听，监听是否是解散群或退出群,进行页面的关闭
  api.addEventListener({
      name: 'shuaAll'
  }, function(ret, err){

         setTimeout(function(){
           //  关闭当前页面
              api.closeWin({});
         },500)

  });


api.addEventListener({
    name: 'onMsgReceive'
}, function(ret, err){
    if( ret ){
      // alert(JSON.stringify(ret));
         var data=ret.value.databody;
         if(data.messages[0].content.target_id == chat.ownGroupId){
         if(data.messages[0].content.target_id == chat.ownGroupId){
            if(data.messages[0].content.msg_body.extras.type=='img'){
              if($api.getStorage('language')=='zho'){
                    msgContent="[圖片]";
              }else{
                    msgContent="[Picture]";
              }
            }else if(data.messages[0].content.msg_body.extras.type=='voice'){
              if($api.getStorage('language')=='zho'){
                    msgContent="[語音]";
              }else{
                    msgContent="[Voice]";
              }
            }else if(data.messages[0].content.msg_body.extras.type=='share'){
              if($api.getStorage('language')=='zho'){
                    msgContent="[帖子]";
              }else{
                    msgContent="[Post]";
              }
            }else if(data.messages[0].content.msg_body.extras.type=='match'){
              if($api.getStorage('language')=='zho'){
                    msgContent="[匹配]";
              }else{
                    msgContent="[Match]";
              }
            }
            else{
               msgContent = data.messages[0].content.msg_body.text;
            }

           time = data.messages[0].ctime_ms;
           from_id = data.from_id;
         }

         data.messages[0].content.translated = '';
         // if(chat.translateLang !== "") {
         // 	translate(data.messages[0].content.msg_body.text, data.messages[0].content);
         // }
         // alert(JSON.stringify(data.messages[0].content));
         var content=data.messages[0].content;
           content.msg_ctime=data.messages[0].ctime_ms;
         // chat.messageArr.push(content);
         var main=$api.dom('.main');
          var redBoxToggle=true; //用来判断是否置顶的
         if(main.scrollTop+main.clientHeight<main.scrollHeight-180){  //scrollTop滚动现在的顶部位置  clientHeight这个dom的高度 scrollHeight可以滚动的总长度
           redBoxToggle=false;
           chat.redBoxVal=chat.redBoxVal+1;
         }else{
           chat.redBoxVal=0;
         }
          if(data.messages[0].content.from_id != $api.getStorage("id")){
             chat.messageArrfen.push(content);
          }


         //让新获取的数据往上顶
         console.log(data.messages[0].content.from_id);
         // 如果没有该用户的头像昵称就在缓存中进行获取
         if(!avatarobj[data.messages[0].content.from_id]){
           api.ajax({
             url: json['http'] + json['tin']['userinfo'],
             method: 'post',
             data: {
               values: {
                 uiId: data.messages[0].content.from_id,
                 pageUiId: data.messages[0].content.from_id
               }
             },

           }, function(ret, err) {
                    console.log(JSON.stringify(ret));
             if(ret) {
              avatarobj[data.messages[0].content.from_id]={avatar_url:ret.data.avatar_url,nickname:ret.data.nickname};
                  var b=chat.messageArrfen;
                  chat.messageArrfen=[];
                  chat.messageArrfen=b;
                  var groupMember=api.pageParam['gid']+'Member';
                    $api.setStorage(groupMember, avatarobj);
                   console.log("添加用户的昵称头像到缓存成功");
               }

           });
         }

         if(redBoxToggle){
           msgToTop();
         }
         if(data.messages[0].content.msg_body.extras.type=="img"){
          //  alert("进来 了");
           setTimeout(function() {
             if(redBoxToggle){
               msgToTop();
             }
           },1300)
         }
     }






    }else{
         alert( JSON.stringify( err ) );
    }
});


// };
// onMsg();

    //断线重新连接
    ////alert('duanxianle');


    //关闭表情包
    function closeEmo(){
      api.closeFrame({
          name: 'ownEmotion'
      });
    }
    //右划退出
    swipeRight();

    UIChatBox = api.require('UIChatBox'); //输入框模块

    UIChatBox.open({
      placeholder: '',
      maxRows: 4,
      emotionPath: 'widget://image/emotion',
      texts: {
        recordBtn: {
          normalTitle: '按住 说话',
          activeTitle: '松开 结束'
        },
        sendBtn: {
          title: '发送'
        }
      },
      styles: {
      topDivider:{
          width:2,
          color:'#efefef',
        },
        inputBar: {
          borderColor: '#efefef',
          bgColor: '#FFFFFF'
        },
        inputBox: {
          borderColor: '#B3B3B3',
          bgColor: '#FFFFFF',
          boardBgColor: '#FFFFFF',
          topMargin:5
        },
        emotionBtn: {
          normalImg: 'widget://image/emotion/aIcon/expression.png'
        },
        extrasBtn: {
          normalImg: 'widget://image/emotion/aIcon/plus.png'
        },
        keyboardBtn: {
          normalImg: 'widget://image/emotion/aIcon/keyboard.png'
        },
        speechBtn: {
          normalImg: 'widget://image/emotion/aIcon/microphone.png'
        },
        recordBtn: {
          normalBg: '#f2f2f2',
          activeBg: '#c4c4c4',
          color: '#aaa',
          size: 14
        },
        indicator: {
          target: 'both',
          color: '#c4c4c4',
          activeColor: '#9e9e9e'
        },
        sendBtn: {
          titleColor: '#fff',
          bg: '#e8b730',
          activeBg: '#c76f16',
          titleSize: 14
        }
      },
      extras: {
        titleSize: 10,
        titleColor: '#a3a3a3',
        btns: [{
            title: '圖片',
            normalImg: 'widget://image/emotion/aIcon/pic.png',
          },
          {
            title: '拍照',
            normalImg: 'widget://image/emotion/aIcon/camera.png',
          },
          {
            title: '自定義表情',
            normalImg: 'widget://image/emotion/aIcon/emo.png',
          },
          {
            title: '分享群組',
            normalImg: 'widget://image/emotion/aIcon/group.png',
          }
        ]
      }
    }, function(ret, err) {


      if(ret) {
        // alert(JSON.stringify(ret));
        // ret.msg="我是傻逼";
        // 发送文本消息

        if(ret.eventType === "send" && ret.msg !== "") {

            var connectionType = api.connectionType;//你的当前网络状态
           if(connectionType==="none"){
            // alert("奇怪");

              api.toast({
                  msg: networkDes,
                  duration: 1500,
                  location: 'middle'
              });


          }
                   errhistory=ret.msg;

            var cdate=new Date().getTime();
               // alert(cdate);
               msgContent = ret.msg;
               time = cdate;
               from_id = $api.getStorage("id");
               var Cindex=chat.messageArrfen.length;
              chat.failSendMessageBody(ret.msg,"txt",1);
              //发送事务通知聊天列表发送消息
              api.sendEvent({    //发给 chat_list 页面
                  name: 'ChatListExec',
                  extra: {
                      targetType: "group",  //来源的类型单聊类型 另外一种是群聊类型single
                      target_gid:gid,  //单聊的对象极光的username既tinkle的uiid
                      target_gname:gname,
                      content: ret.msg,  //要发送的消息体内容
                      type: 'txt'     //发送的自定义的消息类型
                  }
              });

              //接受上面发送的给chat_list事务执行结果的回调
              api.addEventListener({
                  name: 'ChatListExecReturn'
              }, function(ret, err){
                  if( ret ){
                      if(ret.value.state==1){ //发送成功返回
                         console.log("发送消息成功");
                         if(chat.messageArrfen[Cindex-1] != null){                          //这是防止用户点击发送消息过快前面的还在转圈
                           chat.messageArrfen[Cindex-1].msg_body.extras.fail="0"
                         }
                         if(chat.messageArrfen[Cindex-2] != null){
                           chat.messageArrfen[Cindex-2].msg_body.extras.fail="0"
                         }

                            chat.messageArrfen[Cindex].msg_body.extras.fail="0";   //发送消息成功是消息的加载转圈去掉

                      }
                  }else{
                       alert( JSON.stringify( err ) );
                  }
              });



        }
        //打开相册
        if(ret.index == 0) {

          UIMediaScanner = api.require('UIMediaScanner');
          if(api.systemType=="ios"){
            //打开并发送图片
            openAndsendPic();

          }else{
            //申请相册权限
            api.requestPermission({
                list: ["storage"],
            }, function(ret, err) {
                  if(ret.list[0].granted){
            //打开并发送图片
              openAndsendPic();
            }


            });
        }
        }
        //打开相机
        if(ret.index == 1) {
          if(api.systemType=="ios"){
              openCameraSendpic();

          }else{
            //申请相机权限
            api.requestPermission({
                list: ["camera","storage"],
            }, function(ret, err) {
                  if(ret.list[0].granted){
                    //打开相机照相并发送图片
                  openCameraSendpic();
                  }


            });
          }


        }
        // 打开表情包页面
         if(ret.index==2){
           var chat2=$api.dom("#chat");
           var maxHeight = window.innerHeight;
            var height = maxHeight-chat.panelHeight;
            // alert(maxHeight);
            api.openFrame({
                name: 'ownEmotion',
                url: '../chat/ownEmotion.html',
                rect: {
                    x: 0,
                    y: height,
                    w: 'auto',
                    h: chat.panelHeight
                },
                pageParam: {
                    emotion: chat.emotion,
                    type:2 ,//1代表单聊页面打开表情包的  2代表群聊页面打开的
                    height: height
                },
                bounces: false,
                bgColor: '#efefef',
                vScrollBarEnabled: false,
                hScrollBarEnabled: false
            });

         }
         if(ret.index==3){
           api.openWin({
                name: 'appshare',
                url: 'widget://html/chat/appshare.html',
                pageParam: {
                    share: "shareGroup",
                    type: "group_chat",
                    ggid: gid, //为了跟appshare页面那边的gid区分开
                    gname: chat.gname
                }
            });
         }

      } else {
        //alert(JSON.stringify(err));
      }

    });
    if($api.getStorage('language')!='zho'){
      UIChatBox.reloadExtraBoard({
            extras: {
                titleSize: 10,
                titleColor: '#a3a3a3',
                btns: [{
                    title: 'Picture',
                    normalImg: 'widget://image/emotion/aIcon/pic.png'
                  }, {
                    title: 'Camera',
                    normalImg: 'widget://image/emotion/aIcon/camera.png'
                  }, {
                  title: 'Custom Picture',
                  normalImg: 'widget://image/emotion/aIcon/emo.png'
                },
                {
                title: 'Share Group',
                normalImg: 'widget://image/emotion/aIcon/group.png'
                }
                ]
            }
        });
    }
    //点击输入框 左右的 表情，录音，附加功能图标 时  关闭表情包页面
    UIChatBox.addEventListener({
        target: 'inputBar',
        name: 'showExtras'
    }, function(ret, err){
        if( ret ){
          closeEmo();
        }
    });
    UIChatBox.addEventListener({
        target: 'inputBar',
        name: 'showEmotion'
    }, function(ret, err){
        if( ret ){
        closeEmo();
        }
    });
    UIChatBox.addEventListener({
        target: 'inputBar',
        name: 'showRecord'
    }, function(ret, err){
        if( ret ){
            closeEmo();

        }
    });

    UIChatBox.addEventListener({
      target: 'inputBar',
      name: 'move'
    }, function(ret, err) {
      if(ret) {
        var main = $api.dom('.main');
        var mainH = $api.offset(main).h;
        chat.panelHeight=ret.panelHeight;
        console.log(JSON.stringify(ret));
        chat.h=chat.panelHeight+70;
        if(api.systemType=='ios'){
          // alert("???");
          $(".redBox").css({
            'position':'fixed',
            'right':'50%',
            'bottom':chat.h,
            'margin-left':'35px'
          });
        }
        //因为ios下键盘弹出 会触发两次
        if(moveLock && ret['panelHeight'] > 0) {
          $api.css(main, 'height:' + (mainH - ret['panelHeight'] - iosH) + 'px');
                      setTimeout(function() {
                        main.scrollTop = main.scrollHeight;
                        // //alert("滑动"+main.scrollHeight);
                      }, 50);
          // msgToTop();
          moveLock = false;
        } else if(!moveLock && ret['panelHeight'] === 0) {
          $api.css(main, 'height:83vh');
          moveLock = true;
        }
      } else {
        console.log(JSON.stringify(err) + '输入框模块有误');
      }
    });


    //监听录音按钮按下事件，进行录音
          UIChatBox.addEventListener({
        target: 'recordBtn',
        name: 'press'
    }, function(ret, err) {
        if (ret) {
          //申请录音权限
          if(api.systemType=="android"){
              fnrequestPermission("microphone");
          }

          audioStreamer.stop();
          api.startRecord({

      });
      //  bin=$api.dom(".bin");

       $api.css(bin1, "display:block");
       $api.css(bin1, "background-image:url("+warn_text.luzhi+")");
        } else {


        }
    });
    //松开按钮事件监听
            UIChatBox.addEventListener({
          target: 'recordBtn',
          name: 'press_cancel'
      }, function(ret, err) {
          if (ret) {
              $api.css(bin1, "display:none");
              if(!invalidvoice){ //不是无效语音及可发送

            api.stopRecord(function(ret, err) {
              // alert(JSON.stringify(ret));

                  if (ret) {
                    if(ret.duration<1){
                      api.toast({
                          msg: warn_text.short,
                          duration: 2000,
                          location: 'bottom'
                      });
                      return;
                    }
                    if(ret.duration>60){
                        api.toast({
                            msg: warn_text.long,
                            duration: 2000,
                            location: 'bottom'
                        });
                        return;

                    }
                      var path = ret.path;
                      var duration = ret.duration;
    console.log("即将开始上传");
                      qiniu.upfile({
                        file: path,
                        name: ""+$api.getStorage('id') + (new Date).getTime()+".amr",
                      }, function(ret, err) {
                        console.log("上传中"+JSON.stringify(ret));
                        if(ret.status == 1) {
                          if(ret.oper == "complete") {
                            console.log(ret['info']['key']);
                            qinniuKey =ret.info.key;
                              console.log("上传成功:"+qinniuKey);


                            var cdate=new Date().getTime();
                               // alert(cdate);
                               if($api.getStorage('language')=='zho'){
                                  msgContent = "[語音]";
                               }else{
                                  msgContent = "[Voice]";
                               }
                               time = cdate;
                               from_id = $api.getStorage("id");
                               var Cindex=chat.messageArrfen.length;
                              chat.failSendMessageBody(qinniuKey,"voice",1,duration);
                              //发送事务通知聊天列表发送消息
                              api.sendEvent({    //发给 chat_list 页面
                                  name: 'ChatListExec',
                                  extra: {
                                      targetType: "group",  //来源的类型单聊类型 另外一种是群聊类型single
                                      target_gid:api.pageParam['gid'],  //单聊的对象极光的username既tinkle的uiid
                                      target_gname:api.pageParam['gname'],
                                      content: qinniuKey,  //要发送的消息体内容
                                      type: 'voice',  //发送的自定义的消息类型
                                      duration: duration
                                  }
                              });

                              //接受上面发送的给chat_list事务执行结果的回调
                              api.addEventListener({
                                  name: 'ChatListExecReturn'
                              }, function(ret, err){
                                  if( ret ){
                                      if(ret.value.state==1){ //发送成功返回
                                         console.log("发送消息成功");
                                          if(chat.messageArrfen[Cindex-1] != null){                          //这是防止用户点击发送消息过快前面的还在转圈
                                            chat.messageArrfen[Cindex-1].msg_body.extras.fail="0"
                                          }
                                          if(chat.messageArrfen[Cindex-2] != null){
                                            chat.messageArrfen[Cindex-2].msg_body.extras.fail="0"
                                          }

                                             chat.messageArrfen[Cindex].msg_body.extras.fail="0";   //发送消息成功是消息的加载转圈去掉


                                      }
                                  }else{
                                       alert( JSON.stringify( err ) );
                                  }
                              });
                           }
                     } else {
                              alert("图片上传失败");
                   }
                });
              }
          });

      }
        invalidvoice=false;//让他可以发送语音
          } else {


          }
      });
      //按下录音按钮后，从按钮移出
              UIChatBox.addEventListener({
            target: 'recordBtn',
            name: 'move_out'
        }, function(ret, err) {
            if (ret) {
              $api.css(bin1, "background-image:url("+warn_text.quxiao+")");
              // api.toast({
              // 		msg: '按下录音按钮后,从按钮移出',
              // 		duration: 2000,
              // 		location: 'bottom'
              // });

            } else {


            }
        });
        //按下录音按钮后，从按钮移出并松开按钮
        UIChatBox.addEventListener({
      target: 'recordBtn',
      name: 'move_out_cancel'
  }, function(ret, err) {
      if (ret) {
        //停止录音
        	invalidvoice=true; //true 代表语音不发送
          $api.css(bin1, "display:none");
        api.stopRecord(function(ret, err) {});



      } else {


      }
  });
  //按下录音按钮后，从按钮移出
          UIChatBox.addEventListener({
        target: 'recordBtn',
        name: 'move_in'
    }, function(ret, err) {
        if (ret) {
          $api.css(bin1, "background-image:url("+warn_text.luzhi+")");
        } else {


        }
    });



     chat = new Vue({
      el: "#chat",
      data: {
        moreListShow: false, //翻译功能显示
        gname: api.pageParam['gname'],
        ownId: $api.getStorage('id'), //自己的id
        targetId: api.pageParam['uiId'], //别人的id
        nickname: api.pageParam['nickname'], //聊天对象的名字
        avatar:$api.getStorage('avatar'),
        redBoxVal:0, //新消息红点数
        group_avatar:"", //存储群头像
        group: [],//群的所有的信息
        fun: 'Welcome ~ Have fun ！(o゜▽゜)o☆',
        // avatar_your:avatarobj.
        cursor: "", //标识
       messageArr: (typeof($api.getStorage(groupMessages))!="undefined")?$api.getStorage(groupMessages):[], //消息数组 如果缓存中消息数组用缓存中的消息数组
        // messageArr: [],
      //  messageArrfen:this.messageArr.length>=50?this.messageArr.slice(this.messageArr.length-50, this.messageArr.length):this.messageArr,//每次拿出50条信息
        messageArrfen: [], //this.messageArr,//每次拿出50条信息
        bin:-1,
        img: "img",
        txt: "txt",
        share: "share",
        notice: "notice",
        number:50,//起步加载的信息数50，后面逐渐加上 number_stage
        number_stage:50,//每次加载的信息数
        translateLang: '', //选择翻译的语言
        isLoading: true, //是否加载中
        ownGroupId:api.pageParam['gid'],//获取群组id
        sevenhis:'Chat Content Will Be Deleted After 7 Days',
        fanyi:'Just click on the chat to translate',
        emotion:$api.getStorage('emotion')||[],
        panelHeight:0,//表情包页面适应高度
        h:0,
      },
      watch: {
        //旧版使用，现在不使用
        // translateLang: function(lang, oldLang) { //翻译语言
          // if(lang) {
          // 	for(var i = 0, len = this.messageArr.length; i < len; i++) {
          // 		translate(this.messageArr[i].msg_body.text, this.messageArr[i]);
          // 	}
          // }
        // },
      //   messageArr:{
      //        handler:function(val,oldval){
      // chat.messageArrfen=val.length>=50?val.slice(val.length-50, val.length):val;
      //
      //
      //
      //
      //        },
      //        deep:true//对象内部的属性监听，也叫深度监听
      //    }
      },
      mounted: function() {
        window.addEventListener('scroll',this.huadong,true);

      //这个是钩子函数
      //如果cartView函数要执行，必须先执行钩子函数
      //这个钩子函数完成了对cratView函数的调用
      //应该注意的是，使用mounted 并不能保证钩子函数中的 this.$el 在 document 中。为此还应该引入             Vue.nextTick/vm.$nextTick
           this.$nextTick(function () {
               var this1=this;
               setTimeout(function(){

               this1.rezai();
             },2000);

              chat.messageArrfen=this.messageArr.length>=chat.number_stage?this.messageArr.slice(this.messageArr.length-chat.number_stage, this.messageArr.length):this.messageArr,//每次拿出50条信息
              console.log("*******************messageArrfen条数"+chat.messageArrfen.length);
             console.log("*****************messageArr原数组条数"+this.messageArr.length);
            //  console.log("messageArrfen条数"+chat.messageArrfen.length);
            //  console.log("messageArrfen"+chat.messageArrfen);





          })

      },
      methods: {
        judS: function(txt,nickname){
          if(txt=='邀请你一起分享此群 ❤'){
            if($api.getStorage('language')=='zho'){
              return txt;
            }else{
              return 'Invite you to share this group ❤';
            }
          }else if(txt=='邀请你进入群组，一起玩耍吧~'){
            if($api.getStorage('language')=='zho'){
              return txt;
            }else{
              return 'Invite you to join the group and play together~';
            }
          }
          if(nickname=='点击弹出分享'){
            if($api.getStorage('language')=='zho'){
              return nickname;
            }else{
              return 'Click on the pop-up to share';
            }
          }else{
            return nickname;
          }
        },
        sharePic: function(avatar){
          return {
  					backgroundImage: 'url('+ avatar+ ')',
  				}
        },
        //设置头像
  			getPic: function(avatar) {
  				return {
  					backgroundImage: 'url('+'http://bin.baopinghui.com/'+ avatar+ '?imageView2/0/w/100)',
  				}
  			},
        //点击群分享进入群组
        openGroup: function(msg){
          var ggid = msg.msg_body.extras.gid;
          var group_avatar = msg.msg_body.extras.avatar_url;
          var group_name = msg.msg_body.extras.target_gname;
          var group_describe = msg.msg_body.extras.describe;
          var key = msg.msg_body.extras.key;
          //表示对内分享群主
          if(key=='inside'){
            api.openWin({
                name: 'group-setting',
                url: 'widget://html/group/group-setting.html',
                pageParam: {
                    gid: ggid,
                    shareGroup: 'shareGroup'
                }
            });
          }else if(key=='outside'){ //表示对外分享群主，QQ，微信之类的
            api.openFrame({
                name: 'more(new)',
                url: 'widget://html/nav/more(new).html',
                rect: {
                    x: 0,
                    y: 0,
                    w: 'auto',
                    h: 'auto'
                },
                pageParam: {
                    outShare: true,
                    group_avatar:group_avatar,
                    group_name: group_name,
                    group_describe: group_describe,
                    gid: ggid
                },
                bounces: false,
                bgColor: 'rgba(0,0,0,0)',
                vScrollBarEnabled: false,
                hScrollBarEnabled: false
            });

          }

        },
        huadong:function(){
          var main=$api.dom('.main'); //scrollTop滚动现在的顶部位置  clientHeight这个dom的高度 scrollHeight可以滚动的总长度
       //
       if(main.scrollTop<50){
         if(toggle10){
           toggle10=false;
          //  console.log("到顶");
           if(toggle8){     //如果已没有历史消息了就不显示转圈加载
                $(".dingwei").css('display', 'block');
              }

             // alert("aaa");
             setTimeout(function(){
               chat.dingwei();
                 // alert("2");
                $(".dingwei").css('display', 'none');
                toggle10=true;
             },40)
         }

       }
         if(main.scrollTop+main.clientHeight>main.scrollHeight-50){  //判断是否接近底部
           chat.redBoxVal=0; //未读数红点隐藏
       console.log("到底了");
         }
        },
        //关闭表情包
        closeEmo: function(){
          api.closeFrame({
              name: 'ownEmotion'
          });

        },
        //添加表情
        addEmotion: function(imgUrl){
          //判断要添加的表情是不是存在表情包中
          // exist=chat.emotion.indexOf(imgUrl);
          api.ajax({
              url: 'http://api.baopinghui.com/app_tinUserinfoControllerC/selectEmoji',
              method: 'post',
              data: {
                  values: {
                      uiid: chat.ownId
                  }
              }
          },function(ret, err){
              if (ret) {
                var emoji;
                if(ret.data.emoji!=null){
                  emoji=ret.data.emoji.split(",");
                  // chat.emotion=emoji;
                  emoji.reverse();//翻转表情包数组，让新添加的那个表情放在第一个位置
                }else{
                  emoji=[];
                }
                  for(var i=0;i<emoji.length;i++){
                    if(emoji[i]==imgUrl){
                    console.log("表情已存在");
                      return;
                    }
                  }
                  api.ajax({
                      url: 'http://api.baopinghui.com/app_tinUserinfoControllerC/addEmoji',
                      method: 'post',
                      data: {
                          values: {
                              uiid:chat.ownId,
                              str:imgUrl
                          }
                      }
                  },function(ret, err){
                      if (ret) {
                        console.log("添加表情成功");
                        console.log(JSON.stringify(emoji));
                      } else {
                          alert( JSON.stringify( err ) );
                      }
                  });
              }
          });
        },
        //新消息置顶
        zhiding: function(){
          chat.redBoxVal=0;
          msgToTop();
        },
        //点击播放语音
        xiazai:function(key,index,size){
          // console.log("key值");
          // alert("点击了语音");
          // toggle2='';
     if(api.systemType == 'ios'){
       audioStreamer.getVolume(function(ret) {

            if(ret.volume==0.0){
              api.toast({
                  msg: '您当前为静音模式哦',
                  duration: 2000,
                  location: 'bottom'
              });
            }
        });
  // 					audioStreamer.addEventListener({
  // }, function(ret) {
  // 		alert(JSON.stringify(ret));
  // 	toggle2=ret.state;
  // });


   var	abin1=$(".message-wrap:eq("+index+") .abin1")[0];
  // alert(abin1);
  var		abin3=$(".message-wrap:eq("+index+") .abin3")[0];
  var  	lastabin1=$(".message-wrap:eq("+toggle1+") .abin1")[0]
  var		lastabin3=$(".message-wrap:eq("+toggle1+") .abin3")[0];

    if(toggle1!=index&&toggle1!=-1){

    $api.css(lastabin1,"display:none");
    $api.css(lastabin3,"display:block");
    }
    if(toggle1==index){
            api.stopPlay();
            // alert("到");
            //如果语音是在播放中的话就立马关掉，并跳出方法，不执行下面的 播发语音
              if(toggle3=='prepare'){
                // alert("到2");
                $api.css(lastabin1,"display:none");
                $api.css(lastabin3,"display:block");

                api.stopPlay();
                toggle3='';
                return;
              }


    }
    toggle1=index;


      // alert("aa");
      api.download({
        url: 'http://bin.baopinghui.com/'+key,
        savePath: 'fs://media/'+key,
        cache: true,
        allowResume: true
      }, function(ret, err) {
        // alert(JSON.stringify(ret));
        if (ret.state == 1) {
          setTimeout(function(){
            $api.css(abin1,"display:none");
            $api.css(abin3,"display:block");


          },size*1000+500)
          $api.css(abin1,"display:block");
          $api.css(abin3,"display:none");
              toggle3='prepare';
          api.startPlay({
                path: 'fs://media/'+key
            }, function(ret, err) {
                if (ret) {
               toggle3='';
                  $api.css(abin1,"display:none");
                  $api.css(abin3,"display:block");

                } else {
                    // alert(JSON.stringify(err));
                }
            });

}
});






     }else{
       //申请获取访问资源权限，如果已有不会有影响

            fnrequestPermission("storage");


       audioStreamer.getVolume(function(ret) {

            if(ret.volume==0.0){
              api.toast({
                  msg: '您当前为静音模式哦',
                  duration: 2000,
                  location: 'bottom'
              });
            }
        });

            audioStreamer.addEventListener({
  }, function(ret) {
      // alert(JSON.stringify(ret));
    toggle2=ret.state;
  });


   var	abin1=$(".message-wrap:eq("+index+") .abin1")[0];
  // alert(abin1);
  var		abin3=$(".message-wrap:eq("+index+") .abin3")[0];
  var  	lastabin1=$(".message-wrap:eq("+toggle1+") .abin1")[0]
  var		lastabin3=$(".message-wrap:eq("+toggle1+") .abin3")[0];

    if(toggle1!=index&&toggle1!=-1){

    $api.css(lastabin1,"display:none");
    $api.css(lastabin3,"display:block");
    }
    if(toggle1==index){

   //这次点击的的信息跟上一次点击的信息是同一条信息,关掉播放
            audioStreamer.stop();
        //如果语音是在播放中的话就立马关掉，并跳出方法，不执行下面的 播发语音
          if(toggle2=='prepare'){
            $api.css(lastabin1,"display:none");
            $api.css(lastabin3,"display:block");

            audioStreamer.stop();
            toggle2='';
            return;
          }


    }
  toggle1=index;

   setTimeout(function(){
     $api.css(abin1,"display:none");
     $api.css(abin3,"display:block");


   },size*1000+200)

  api.download({
    url: 'http://bin.baopinghui.com/'+key,
    savePath: 'fs://media/'+key,
    cache: true,
    allowResume: true
  }, function(ret, err) {
    if (ret.state == 1) {

            audioStreamer.openPlayer({
      path:'fs://media/'+key,
      // path:'http://bin.baopinghui.com/'+key,
}, function(ret) {
    if (ret.status) {
      $api.css(abin1,"display:block");
      $api.css(abin3,"display:none");
        // api.alert({ msg: JSON.stringify(ret) });
    }
});

}
});




     }


        },
        //用于语音的冒泡按钮
        yuyin:function(index,centerX,centerY){
// 使用apiCloud冒泡按钮插件
          var bubbleMenu = api.require('bubbleMenu');

          bubbleMenu.open({
          style: {
                //  mask: '#FFF',
            maskColor:'rgba(0,0,0,0)',
            bgColor:'#000',
        lightColor:'#009acd',
        borderColor:'#000',
        cutLineColor:'#636363',
              // titleColor'#00':  //(可选项)字符串类型；遮罩层题色，支持 rgb,rgba,#；默认：rgba(0,0,0,0)
        cornerRadius: 8,  //(可选项)数字类型；圆角大小；默认：8
        arrowSize: 10,    //(可选项)数字类型；尖角大小；默认：12
        titleSize: 11,    //(可选项)数字类型；标题大小：默认：14
        height: 50        //(可选项)数字类型；菜单高度；默认：50
        },
              centerX: centerX,
              centerY: centerY-10,
              btnArray: [{
                  title: warn_text.tingtong
              },{title: warn_text.yangshengqi

              }],
              fixedOn: api.frameName
          }, function(ret, err) {
              if (ret.index==0) {
                audioStreamer.onCall();


        } else if(ret.index==1){

               audioStreamer.onNormal();


              }
          });



    },
               copy:function(event,index){
                  var pagex=event.clientX;
                  var pagey=event.clientY;
                  // var pagey=event.pageY;
                  // alert(pagex);

                 var fuzhi="";
                 var fanyi="";
                 var wangcheng="";

               //	chat.translateLang='en';
               if ($api.getStorage("language") == "zho") {
                 fuzhi="复制";
                 fanyi="翻译";
                 fanyiyuyan="翻译语言";
                 wangcheng="复制完成";

                 if(typeof($api.getStorage('translateLangStorage')) != "undefined"){

                    chat.translateLang=$api.getStorage('translateLangStorage');

                  }else {
                      chat.translateLang='zh';
                  }
                 // //alert("中");

               }else{
                 fuzhi="copy";
                 fanyi="translate";
                 wangcheng="Copy complete";
                 fanyiyuyan="translation language";

                 if(typeof($api.getStorage('translateLangStorage')) != "undefined"){

                    chat.translateLang=$api.getStorage('translateLangStorage');

                  }else {
                      chat.translateLang='en';
                  }
               }



      // 使用apiCloud冒泡按钮插件
                 var bubbleMenu = api.require('bubbleMenu');

                 bubbleMenu.open({
                 style: {
                       //  mask: '#FFF',
                   maskColor:'rgba(0,0,0,0)',
                   bgColor:'#000',
               lightColor:'#009acd',
               borderColor:'#000',
               cutLineColor:'#636363',
                     // titleColor'#00':  //(可选项)字符串类型；遮罩层题色，支持 rgb,rgba,#；默认：rgba(0,0,0,0)
               cornerRadius: 8,  //(可选项)数字类型；圆角大小；默认：8
               arrowSize: 10,    //(可选项)数字类型；尖角大小；默认：12
               titleSize: 14,    //(可选项)数字类型；标题大小：默认：14
               height: 50        //(可选项)数字类型；菜单高度；默认：50
               },
                     centerX: pagex,
                     centerY: pagey-10,
                     btnArray: [{
                         title: fuzhi
                     }],
                     fixedOn: api.frameName
                 }, function(ret, err) {
                     if (ret.index==0) {
                       var clipBoard = api.require('clipBoard');
                    clipBoard.set({
                        value: chat.messageArrfen[index].translated
                    }, function(ret, err) {
                        if (ret) {
                           api.toast({
                               msg: wangcheng,
                               duration: 1000,
                               location: 'center'
                           });
                        } else {
                           //  MNtoast('操作失败')
                        }
                    });

                  }
                 });




               },
               //用于把窗口定位在原历史消息的头部
               dingwei:function(){
                 // return;
                 var main=$api.dom('.main');

                 // var $bin= $("#bin").css('display', 'none');
                 var height_old=main.scrollHeight-main.scrollTop;
                 chat.number+=chat.number_stage;
                 var uuid=$api.getStorage('id'); //自己的id
                 var otherId=api.pageParam['uiId'];//当前聊天对象的id
                 var aa=new Date().getTime();
                   var msgs=db.selectSqlSync({
                       name: 'tinkle',
                       sql: "select * from tin_im_Gmessage where gid='"+gid+"' order by ctime_ms desc limit "+(chat.number-chat.number_stage)+","+chat.number_stage
                       // sql:"select * from tin_im_message where userid='sdfasdfasdf'"

                   });

                   console.log(":::::::::::::::::::::"+((new Date().getTime())-aa));
                        msgs.data.reverse();//倒序
                   // alert(JSON.stringify(msgs));
                   for(var i=0;i<msgs.data.length;i++){
                        msgs.data[i].msg_body=JSON.parse(msgs.data[i].msg_body);
                        msgs.data[i].create_time=Number(msgs.data[i].create_time);
                        msgs.data[i].translated="";
                   }
                 chat.messageArrfen=msgs.data.concat(chat.messageArrfen);
                 setTimeout(function(){
                   if(toggle8){  //必须是有历史消息才有效
                     // alert("a");
                       main.scrollTop=main.scrollHeight-height_old;
                   }
                   if(msgs.data.length<chat.number_stage){
                     toggle8=false; //表示已经没有消息了
                   }
                },10)
                     // msgToTop();

                 // alert("aa");
             },
        //点击聊天信息进行翻译，获取缓存中的要求翻译语言，如果没有则使用缓存中使用的版本语言
        translateLang3:function(index){

          // alert(sendtext);




          if(typeof($api.getStorage('translateLangStorage')) != "undefined"){

             chat.translateLang=$api.getStorage('translateLangStorage');

            }else{

                  if ($api.getStorage("language") == "zho") {
                  chat.translateLang='zh';

                   }else{
            // //alert("英");
            chat.translateLang='en';
          }
        }
             //调用百度翻译的接口
                // chat.messageArr[index].translated='qeeeeqwe';
            translate(chat.messageArrfen[index].msg_body.text, chat.messageArrfen[index]);


      },
      gtouchstart:function gtouchstart(event,index,type){
        // var touch=event.touch[0];
        var centerX=event.changedTouches[0].pageX;
        var centerY=event.changedTouches[0].pageY;
        // //alert(centerX);
        // alert("厉害");
    if(type == 4){

         var event_=event;
                timeOutEvent = setTimeout(function(){
                     openHometoggle=false;//不允许打开个人主页
                  UIChatBox.value(function(ret, err) { //获取输入框当前的消息
                 if (ret) {
                  //  alert(JSON.stringify(ret));

                         UIChatBox.value({            //设置输入框的消息
                      msg:  ret.msg+"@"+chat.nickname_your(chat.messageArrfen[index])+" "
                         });
                   } else {
                     alert(JSON.stringify(ret));

                 }
              });
              setTimeout(function(){
                   openHometoggle=true;//不允许打开个人主页
              },1000)
                event_.preventDefault();
                  // UIChatBox.popupKeyboard(); 弹起键盘

            },300);


    }else{
                timeOutEvent = setTimeout(function(){
           chat.longPress(index,centerX,centerY,type);
                },500);//这里设置定时器，定义长按500毫秒触发长按事件，时间可以自己改，个人感觉500毫秒非常合适

              }
        return false;
  },
          gtouchend:function gtouchend(index,event){
                  clearTimeout(timeOutEvent);//清除定时器
                  if(timeOutEvent!=0){
                      //这里写要执行的内容（尤如onclick事件）
                      // vm.goChat(item);
                  }
                  return false;
              },
              //如果手指有移动，则取消所有事件，此时说明用户只是要移动而不是长按
              gtouchmove:function gtouchmove(){
                  clearTimeout(timeOutEvent);//清除定时器
                  timeOutEvent = 0;

              },

              //真正长按后应该执行的内容
              longPress:function longPress(index,centerX,centerY,type){
                // //alert("厉害吧");

                if(type==1){
                     chat.translateLang2(index,centerX,centerY);
              }else if(type==2){
                     chat.yuyin(index,centerX,centerY);

              }else if(type==3){
                  chat.emotion2(index,centerX,centerY);
              }



                  timeOutEvent = 0;
                  //执行长按要执行的内容，如弹出菜单
                  // $api.css($api.dom('.Popup'), 'display:block');
              },
            emotion2: function(index,centerX,centerY){
              // 使用apiCloud冒泡按钮插件
                         var x=centerX;
                         var y=centerY-10;
                         var title;
                         if($api.getStorage('language')=='zho'){
                           title="添加到表情包";
                         }else{
                           title="Add to warehouse";
                         }
                         var bubbleMenu = api.require('bubbleMenu');

                         bubbleMenu.open({
                         style: {
                               //  mask: '#FFF',
                           maskColor:'rgba(0,0,0,0)',
                           bgColor:'#000',
                       lightColor:'#009acd',
                       borderColor:'#000',
                       cutLineColor:'#636363',
                             // titleColor'#00':  //(可选项)字符串类型；遮罩层题色，支持 rgb,rgba,#；默认：rgba(0,0,0,0)
                       cornerRadius: 8,  //(可选项)数字类型；圆角大小；默认：8
                       arrowSize:8,    //(可选项)数字类型；尖角大小；默认：12
                       titleSize: 14,    //(可选项)数字类型；标题大小：默认：14
                       height: 50        //(可选项)数字类型；菜单高度；默认：50
                       },
                             centerX: x,
                             centerY: y,
                             btnArray: [{title:title,length:120}]
                            //  fixedOn: api.frameName
                         }, function(ret, err) {
                          //  alert(JSON.stringify(ret))
                             if (ret.index==0) {
                              var imgUrl=chat.messageArrfen[index].msg_body.text;
                               if(chat.messageArrfen[index].msg_body.extras.fail=="1"){
                                 api.toast({
                                     msg: '图片未发送成功，不能添加',
                                     duration: 2000,
                                     location: 'bottom'
                                 });
                                 return;
                               }else{
                                 console.log(imgUrl);
                             chat.addEmotion(imgUrl);
                           }
                          }
                         });
            },
            translateLang2:function(index,centerX,centerY){
              var fuzhi="";
              var fanyi="";
              var wangcheng="";
              var fanyiyuyan=""
            //	chat.translateLang='en';
            if ($api.getStorage("language") == "zho") {
              fuzhi="复制";
              fanyi="翻译";
              fanyiyuyan="翻译语言";
              wangcheng="复制完成";

              if(typeof($api.getStorage('translateLangStorage')) != "undefined"){

                 chat.translateLang=$api.getStorage('translateLangStorage');

               }else {
                   chat.translateLang='zh';
               }
              // //alert("中");

            }else{
              fuzhi="copy";
              fanyi="translate";
              wangcheng="Copy complete";
              fanyiyuyan="translation language";

              if(typeof($api.getStorage('translateLangStorage')) != "undefined"){

                 chat.translateLang=$api.getStorage('translateLangStorage');

               }else {
                   chat.translateLang='en';
               }
            }



   // 使用apiCloud冒泡按钮插件
              var bubbleMenu = api.require('bubbleMenu');

              bubbleMenu.open({
              style: {
                    //  mask: '#FFF',
                maskColor:'rgba(0,0,0,0)',
                bgColor:'#000',
            lightColor:'#009acd',
            borderColor:'#000',
            cutLineColor:'#636363',
                  // titleColor'#00':  //(可选项)字符串类型；遮罩层题色，支持 rgb,rgba,#；默认：rgba(0,0,0,0)
            cornerRadius: 8,  //(可选项)数字类型；圆角大小；默认：8
            arrowSize: 10,    //(可选项)数字类型；尖角大小；默认：12
            titleSize: 14,    //(可选项)数字类型；标题大小：默认：14
            height: 50        //(可选项)数字类型；菜单高度；默认：50
            },
                  centerX: centerX,
                  centerY: centerY-10,
                  btnArray: [{
                      title: fuzhi
                  }, {
                      title: fanyi
                  },{title: fanyiyuyan

                  }],
                  fixedOn: api.frameName
              }, function(ret, err) {
                  if (ret.index==0) {
                    var clipBoard = api.require('clipBoard');
                 clipBoard.set({
                     value: chat.messageArrfen[index].msg_body.text
                 }, function(ret, err) {
                     if (ret) {
                        api.toast({
                            msg: wangcheng,
                            duration: 1000,
                            location: 'center'
                        });
                     } else {
                        //  MNtoast('操作失败')
                     }
                 });

               } else if(ret.index==1) {
                //  //alert(index);

                      translate(chat.messageArrfen[index].msg_body.text, chat.messageArr[index]);
                  }else if(ret.index==2){


                    api.openWin({

                  name:'recommend_list3',
                  url: '../chat/recommend_list3.html',
                     // "chat/chat2.html"
                    // url:router['widget']+"group/group_chat.html",
                  slidBackEnabled: false,
                  animation: {
                    type: "fade", //动画类型（详见动画类型常量）
                    subType: "fade", //动画子类型（详见动画子类型常量）
                    duration: 250 //动画过渡时间，默认300毫秒
                  },
                  pageParam: {

                translateLang:chat.translateLang


                    }
                  });


                  }
              });



        },
        //		  	去他的个人主页
                openHome: function(item) {
                  if(!openHometoggle){ //这个开关是是为了长按头像不让他触发这个点击事件
                         return;
                  }
                  // //alert(item);
                  var this_ = this;
                var winName =  "otherDetail/" + item
                  api.openWin({
                    name: winName,
                    url: "widget://html/home/home.html",
                    reload: true,
                    vScrollBarEnabled: false,
                    slidBackEnabled: false,
                    pageParam:{
                    otherId: item,
                    pathisGroupchat:1
                  }
                  });

                },
        //退出群聊页面
        closed: function() {
          api.closeWin({
              name: 'group_chat'
          });
          api.closeWin({
              name: 'group-setting'
          });
          api.closeWin({
              name: 'chat2'
          });
          //var refresh = "window.location.reload();";
          ////alert('后退');
          // api.execScript({
          // 		name: 'index2',
          // 		//frameName: 'recommend_list2',
          // 		script: refresh
          // });
          UIChatBox.value(function(ret, err) {
          if (ret) {
            //设置缓存草稿

              $api.rmStorage(groupsendtext);
              $api.setStorage(groupsendtext, ret.msg);
          }
      });
      //重置群组未读数

      // 发送广播，重新登录

      api.sendEvent({
        name: 'loginIM2',
        extra: {
          key1: api.pageParam['gid'], //群组的Id
          key2: msgContent, //
          key3: time,
          key4: from_id,
          key5:chat.group_avatar,
          key6:api.pageParam['gname']
        }
      });

          api.closeWin({
            animation: {
              type: "push", //动画类型（详见动画类型常量）
              subType: "from_left", //动画子类型（详见动画子类型常量）
              duration: 300 //动画过渡时间，默认300毫秒
            }
          });



      },
        rezai:function(){
          jQuery(function (){
           jQuery.ajax({
             url: 'http://api.baopinghui.com/jpushim/findnewbin2',
             type: 'GET',
             async: true,
             data: {
               gid:api.pageParam['gid']
            },
            success:function (ret){
                      avatarobj_len=ret.data.list.length;
                      ////alert(JSON.stringify( avatarobj[data.member_list[0].username]));
                      for(var i=0;i<avatarobj_len;i++){
                         if(ret.data.list[i]!=null){
                          avatarobj[ret.data.list[i].id]={avatar_url:ret.data.list[i].avatar_url,nickname:ret.data.list[i].nickname};
          }
                     }
                     var groupMember=api.pageParam['gid']+'Member';
                       $api.setStorage(groupMember, avatarobj);
                      console.log("重载缓冲成功");

            }
          });
        });
          // //alert("再被调用了");
        },
        avatar_your: function(mess,index){
           if(!avatarobj[mess.from_id]&&toggle4==true){
             api.ajax({
               url: json['http'] + json['tin']['userinfo'],
               method: 'post',
               data: {
                 values: {
                   uiId: mess.from_id,
                   pageUiId: mess.from_id
                 }
               },

             }, function(ret, err) {
               if(ret) {
                //  chatlist[i].nickname = ret.data.nickname;//用户名
                //  chatlist[i].avatar_url = ret.data.avatar_url; //用户头像
                // alert(JSON.stringify());

                avatarobj[mess.from_id]={avatar_url:ret.data.avatar_url,nickname:ret.data.nickname};
                  // avatarobj.push(a);
                  setTimeout(function(){
                    var b=chat.messageArrfen[index];
                    chat.messageArrfen[index]=[];
                    chat.messageArrfen[index]=b;
                  },60)

                 }

             });


             return 'fanghongbin';

           }
           else if(avatarobj[mess.from_id]){
        return avatarobj[mess.from_id].avatar_url;
      }
        },
        nickname_your: function(mess){
          if(!avatarobj[mess.from_id]){
           return "该用户已注销";
         }
         else{
        return avatarobj[mess.from_id].nickname;
          }
        },
        //打开群设置页面
        openGroup_serring: function() {


          api.openWin({
            name: 'group_setting',
            url: "widget://html/group/group-setting.html",
            slidBackEnabled: false,
            // delay:10,
            // animation: {
            // 	type: "none", //动画类型（详见动画类型常量）
            // 	subType: "from_right", //动画子类型（详见动画子类型常量）
            // 	duration: 0 //动画过渡时间，默认300毫秒
            // },
            pageParam: {
              gid: api.pageParam['gid'] //群组id
            }
          });
          // api.closeWin({
          //
          // });

        },
        //更多
        moreList: function(isClsoe) {
          if(isClsoe == 'close') {
            this.moreListShow = false;
            UIChatBox.show();
          } else {
            this.moreListShow = true;
            UIChatBox.hide();
          }
        },
        dispNone: function() {
          this.moreListShow = false;
          UIChatBox.show();
        },
        //选择语言
        selectLang: function(lang) {
          this.translateLang = lang;
          this.moreListShow = false;
          UIChatBox.show();
          msgToTop();
        },
        showMessage: function(mess) {
          return chat.transEmotion(mess);
        },
        showMessage2: function(mess) {
          return mess.translated;
        },
        showMessagetime:function(time,index){

  					return	chat.change2(time,index);

  					},
        //打开图片
        sacnImage: function(imageUrl) {
          // imageBrowser.openImages({
          //   showList: false,
          //   imageUrls: [
          //     imageUrl+"?auto-orient"
          //   ]
          // });
          api.openWin({
              name: 'im',
              url: '../chat/imgBrowser.html',
              pageParam: {
                  isrc: imageUrl
              }
          });
        },
        //转换emotion
        transEmotion: function(mess) {
          var reg = /\[(.*?)\]/gm;
          var transMsg = mess.msg_body.text.replace(reg, function(match) {
            for(var i = 0, len = emotionArr.length; i < len; i++) {
              if(match == emotionArr[i]['text']) {
                var path = api.wgtRootDir + '/image/emotion/' + emotionArr[i]['name'] + '.png';
                return '<img width="20" height="20" style="margin-bottom:-5px;" src="' + path + '" />'
              }
            }
          });
          if(mess.from_id == this.ownId) {
            return  transMsg ;
          } else {
            return transMsg;
          }

        },

        //获取历史消息
        getHistroy: function() {
          // alert("历史消息");
        var sj3=(typeof($api.getStorage(groupMessages))!="undefined"&&JSON.stringify(chat.messageArr) != '[]')?change1((chat.messageArr[chat.messageArr.length-1].msg_ctime),1000):(sj2+" 00:00:00");

          //  alert("addfasd"+JSON.stringify(chat.messageArr[chat.messageArr.length-1].msg_ctime));
              // alert(chat.messageArr[chat.messageArr.length-1].msg_ctime);
            // alert(change1((chat.messageArr[chat.messageArr.length-1].msg_ctime),0));
        console.log(JSON.stringify("*****************************使用信息中的获取时间"));

        var this_ = this;
          api.ajax({
          url: 'https://report.im.jpush.cn/v2/groups/' + this_.ownGroupId + '/messages?count=1000&begin_time=' + sj3 + '&end_time=' + sj + ' 23:59:59',
            encode: true,
            method: 'get',
            headers: {
              'Authorization': 'Basic ' + par,
              'Content-Type': 'application/json;charset=utf-8'
            }
          }, function(ret, err) {


            //  \\console.log(JSON.stringify(ret));
            // alert(JSON.stringify(ret));


            if(ret) {
              // alert("快马");
              if(ret.count==0){
                return;
              }


              // alert(JSON.stringify(ret));
              console.log("开始获取");
              // chat.messageArr=ret.messages;
                // alert(ret.count);
                if(sj3==(sj2+" 00:00:00")){
                  console.log("没有缓冲进行拿50条信息￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥");
                  continuegain=true;
              if(ret.count>=50&&ret.count!=1000){
          var  b=ret.messages.slice(ret.count-50,ret.count);

              for(var i=0;i<50;i++){
                b[i].translated ='';
                  }
                  chat.messageArr=b;
                }else if(ret.count<50){

              // ret.messages;

                for(var i=0;i<ret.count;i++){
                 ret.messages[i].translated ='';
               }
                 chat.messageArr=ret.messages;

             }
           }else{
             var a,b,c;
             //这个几个是为了防止同一秒内有三条信息发送，排除相同的信息再获取
             if(chat.messageArr[chat.messageArr.length-1]!=null){
                 a=chat.messageArr[chat.messageArr.length-1].msgid;
             }
             if(chat.messageArr[chat.messageArr.length-2]!=null){
               b=chat.messageArr[chat.messageArr.length-2].msgid;
             }
             if(chat.messageArr[chat.messageArr.length-3]!=null){
                 c=chat.messageArr[chat.messageArr.length-3].msgid;
             }


            //  alert(b);
             console.log("已有缓冲进行拿新信息￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥");
            // console.log("最后一条信息:"+JSON.stringify(chat.messageArr.indexOf(b)));
              for(var i = 0; i < ret.messages.length; i++) {

                       if(ret.messages[i].msgid==b||ret.messages[i].msgid==a||ret.messages[i].msgid==c){
                         continue;
                       }

                if(ret.messages[i].target_id==chat.ownGroupId){


                  // alert(JSON.stringify(ret.messages[i]));
    (function(i){



                    ret.messages[i].translated = '';
                    chat.messageArr.push(ret.messages[i]);
                    //判断新的消息的头像和昵称是不是已有缓存没有的话，进行获取并储存
                    if(!avatarobj[ret.messages[i].from_id]&&toggle4==true){

                      var new_from_id=ret.messages[i].from_id;

                      api.ajax({
                        url: json['http'] + json['tin']['userinfo'],
                        method: 'post',
                        data: {
                          values: {
                            uiId: new_from_id,
                            pageUiId: new_from_id
                          }
                        },

                      }, function(ret2, err) {
                          console.log(JSON.stringify(ret2));
                        if(ret) {
                         avatarobj[new_from_id]={avatar_url:ret2.data.avatar_url,nickname:ret2.data.nickname};
                             var b=chat.messageArrfen;
                             chat.messageArrfen=[];
                             chat.messageArrfen=b;
                             var groupMember=api.pageParam['gid']+'Member';
                               $api.setStorage(groupMember, avatarobj);
                              console.log("添加用户的昵称头像到缓存成功");
                          }

                      });


                    }
                })(i)


                }
              }
           }
                $api.rmStorage(groupMessages);
                if(chat.messageArr.length>2000){
                  chat.messageArr.splice(0,chat.messageArr.length-2000);
                }
              $api.setStorage(groupMessages, chat.messageArr);//往消息数组里添加

              // alert(JSON.stringify(chat.messageArr[0]));

              console.log("结束获取");


              this_.cursor = ret.cursor; //拿到标识
chat.messageArrfen=chat.messageArr.length>=chat.number_stage?chat.messageArr.slice(chat.messageArr.length-chat.number_stage, chat.messageArr.length):chat.messageArr;//每次拿出50条信息

              if(this_.cursor !== "" && ret.count == 1000) {
                extraArray=ret.messages.slice(ret.count-50,ret.count);

                //继续获取消息
                      chat.Continue_getHistroy(this_.ownGroupId,this_.cursor);
//									api.ajax({
//										url: 'https://report.im.jpush.cn/v2/users/' + this.ownId + '/messages?cursor=' + this.cursor,
//										method: 'get',
//										headers: {
//											'Authorization': 'Basic ' + par,
//											'Content-Type': 'application/json;charset=utf-8'
//										}
//									}, function(ret, err) {
//										if(ret) {
//											//
//											if(ret.count === 0) {
//												return;
//											}
//											for(var i = 0; i < ret.messages.length; i++) {
//												if((ret.messages[i].from_id == chat.targetId && ret.messages[i].target_id == chat.ownId) || (ret.messages[i].from_id == chat.ownId && ret.messages[i].target_id == chat.targetId)) {
//													ret.messages[i].translated = '';
//													chat.messageArr.push(ret.messages[i]);
//												}
//											}
//											msgToTop();
//										} else {
//
//										}
//									});
              }


                  msgToTop();
              //加载历史后，显示在最底部
              var main=$api.dom('.main');
              if(main.scrollTop+main.clientHeight<main.scrollHeight-180){  //scrollTop滚动现在的顶部位置  clientHeight这个dom的高度 scrollHeight可以滚动的总长度
                  setTimeout(function(){
                    msgToTop();
                  },1300);
              }
              return;
              // chat.isLoading = false;
              // $(".main").css('opacity', '1');
            } else {
              //群主不存在
              if(err.code==899006){

                api.closeWin({
                });
                api.toast({
                    msg: '该群已不存在',
                    duration: 2000,
                    location: 'bottom'
                });



              }else{
              // alert(JSON.stringify(err));
              return;
            }

            }

          });


        },
        Continue_getHistroy: function(ownGroupId,cursor) {
          var this_ = this;
          api.ajax({
            url: 'https://report.im.jpush.cn/v2/groups/' + this_.ownGroupId+ '/messages?cursor=' + cursor,
            method: 'get',
            headers: {
              'Authorization': 'Basic ' + par,
              'Content-Type': 'application/json;charset=utf-8'
            }
          }, function(ret, err) {
            if(ret) {
              if(ret.count === 0) {
                return;
              }
              // alert(ret.count);
              if(continuegain=true){
                  console.log("没有缓冲***再次获取的进行拿50条信息￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥");
              if(ret.count>=50&&ret.count!=1000){
                var  b=ret.messages.slice(ret.count-50,ret.count);

                    for(var i=0;i<50;i++){
                      b[i].translated ='';
                    }
                    chat.messageArr=b;
            }else if(ret.count<50){
            var extraArray2=extraArray.slice(ret.count, 50);
                 for(var i=0;i<ret.count;i++){
                   extraArray2.push(ret.messages[i]);

                 }
                 for(var i=0;i<50;i++){
                   extraArray2[i].translated ='';
                 }
              chat.messageArr=extraArray2;
            }
          }else{
              console.log("已有缓冲***再次获取的进行拿新信息￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥￥");
              for(var i = 0; i < ret.messages.length; i++) {
                // if((ret.messages[i].from_id == chat.targetId && ret.messages[i].target_id == chat.ownId) || (ret.messages[i].from_id == chat.ownId && ret.messages[i].target_id == chat.targetId)) {
                // 	ret.messages[i].translated = '';
                // 	chat.messageArr.push(ret.messages[i]);
                // }
                if(ret.messages[i].target_id==chat.ownGroupId){
                    ret.messages[i].translated = '';
                    chat.messageArr.push(ret.messages[i]);

                }
              }
            }
            $api.rmStorage(groupMessages);
            if(chat.messageArr.length>2000){
              chat.messageArr.splice(0,chat.messageArr.length-2000);
            }
        $api.setStorage(groupMessages, chat.messageArr);//往消息数组里添加

                // alert("相等");
                    chat.messageArrfen=chat.messageArr.length>=chat.number_stage?chat.messageArr.slice(chat.messageArr.length-chat.number_stage, chat.messageArr.length):chat.messageArr;//每次拿出50条信息


              this_.cursor = ret.cursor; //拿到标识
              //如果还有未拿完的数据-那就继续拿
              if(this_.cursor !== "" && ret.count == 1000) {

                             extraArray=ret.messages.slice(ret.count-50,ret.count);
                      chat.Continue_getHistroy(this_.ownGroupId,this_.cursor);
              }
              setTimeout(function(){
                msgToTop();
              },50);
              // chat.isLoading = false;
              // $(".main").css('opacity', '1');
                return;
            } else {
              return;
              // api.//alert({
              //   msg: JSON.stringify(err)
              // });
            }
          });
        },
        getHistroy_start:function(){
          var aa=new Date().getTime();
          console.log("开始数据库查询");
          var selectSql="from tin_im_Gmessage where gid='"+gid+"'";
            var msgs=db.selectSqlSync({
                name: 'tinkle',
                sql: "select * "+selectSql+" order by ctime_ms desc limit "+(chat.number-chat.number_stage)+","+chat.number_stage
                // sql:"select * from tin_im_message where userid='sdfasdfasdf'"

            });
            console.log(":::::::::::::::::::::查询消息用时"+((new Date().getTime())-aa));
            msgs.data.reverse(); //倒序
           //  alert(JSON.stringify(msgs));
            for(var i=0;i<msgs.data.length;i++){
                 msgs.data[i].msg_body=JSON.parse(msgs.data[i].msg_body.replace(/&prime;/g,"'"));
                 msgs.data[i].create_time=Number(msgs.data[i].create_time);
                 msgs.data[i].translated="";
            }
            console.log(":::::::::::::::::::::查询消息加赋值和改变耗时"+((new Date().getTime())-aa));
            chat.messageArrfen=msgs.data;
              msgToTop();

          var lastMessage=db.selectSqlSync({  //获取该群组的一条消息
                name: 'tinkle',
                sql: "select *,(select count(gid) "+selectSql+") as count from tin_im_Gmessage  where gid='"+gid+"' order by ctime_ms desc limit 0,1 "
            });
        console.log(JSON.stringify(lastMessage));

          var count=0;
          var current_time=new Date();
         var sj3=getNowFormatDate3(6);
         var last_time=new Date(sj3.replace(/-/g, "/"));
        //  alert(JSON.stringify(lastMessage));
         if(msgs.data.length>0){

             chat.isLoading = false; //关闭加载转圈
             $(".main").css('opacity', '1');


         }

        // var sj3=(lastMessage.data.length>0)?change1((Number(lastMessage.data[0].ctime_ms)),1000):(sj2+" 00:00:00");

       //  alert(sj3);
         if(lastMessage.data.length>0){
          //  alert(JSON.stringify(sj3));
              count=lastMessage.data[0].count;
           }
      // alert(Number(lastMessage.data[0].ctime_ms)-last_time);
             if(lastMessage.data.length>0){ //有历史消息在数据库中
               if(Number(lastMessage.data[0].ctime_ms)-last_time>0){ //群中历史消息大于7天前的历史消息
              var time=change1((Number(lastMessage.data[0].ctime_ms)),1000);
              console.log("库有消息,且大于前的时间为：：：："+time);
                  chat.getHistroy4(time,count);

               }else{     //有历史消息且最后历史消息时间超过7天前的时间
                 console.log("库有消息,最后历史消息时间且超过小于七天：：：："+last_time);
                 chat.getHistroy4(sj3,count);
                //  chat.getHistroy3(chat.messageArrfen,2);

               }

             }else{ //数据库中无历史消息

            sj3=jointime>last_time?change1(jointime,1000):change1(last_time,1000);
             console.log("库中无历史消息 获取时间为::"+sj3);
               chat.getHistroy4(sj3,count);
             }

        },
           getHistroy4:function(time,count){

             var current_time=new Date();
            var sj3=time;
            var last_time=new Date(sj3.replace(/-/g, "/"));
             api.ajax({
               url: 'https://report.im.jpush.cn/v2/groups/' + gid + '/messages?count=1&begin_time=' + sj3 + '&end_time=' + sj ,//+ ' 23:59:59',
                 encode: true,
                 method: 'get',
                 headers: {
                   'Authorization': 'Basic ' + par,
                   'Content-Type': 'application/json;charset=utf-8'
                 }
             },function(ret, err){
              //  alert(JSON.stringify(ret));
                 if (ret) {
                   console.log("总条数**************  "+ret.total+"耗时   " +(new Date()-start));
                      // if(ret.total)
                       var num=parseInt(ret.total/1000)>10?10:parseInt(ret.total/1000);

                       if(num == 0){  //如果使用 当前的时间 获取消息没有超过一千条，
                         chat.getHistroy5(sj3,count);
                       }else{
                      var  date=new Date(current_time-parseInt((current_time-last_time)/(num+1)))
                      var  Y = date.getFullYear() + '-';
                      var  M = (date.getMonth()+1 < 10 ? '0'+(date.getMonth()+1) : date.getMonth()+1) + '-';
                      var  D = date.getDate() + ' ';
                      var  h = date.getHours() + ':';
                      var    m = date.getMinutes() + ':';
                      var    s = date.getSeconds();
                      var  timebin=Y+M+D+h+m+s;
                      console.log("查询消息的时间开始"+timebin);
                      chat.getHistroy5(timebin,count);
                       }


                 } else {

                 }
             });


      },
         getHistroy5:function(time,count){
            api.ajax({
              url: 'https://report.im.jpush.cn/v2/groups/' + gid + '/messages?count=1000&begin_time=' + time + '&end_time=' + sj ,//+ ' 23:59:59',
                encode: true,
                method: 'get',
                headers: {
                  'Authorization': 'Basic ' + par,
                  'Content-Type': 'application/json;charset=utf-8'
                }
            },function(ret, err){
                if (ret) {
                  if(ret.count==1000&&ret.total>1000){
                      chat.Continue_getHistroy4(ret.messages,ret.cursor,count);

                    }else{2


                     console.log("总条数**************  "+ret.total+"耗时   " +(new Date()-start));
                      var tempMessages=[];
                      var tempGMs_temp=[];
                  for(var i=0;i<tempGMs.length;i++){
                        if(tempGMs[i].target_id==gid){
                          tempGMs_temp.push(tempGMs[i]);
                        }
                  }
                  // alert(JSON.stringify(tempGMs_temp));
                     if(ret.count>50){

                     if(ret.messages.length>=chat.number){
                       for(var i =ret.messages.length-50; i < ret.messages.length; i++) {
                            ret.messages[i].translated="";
                               tempMessages.push(ret.messages[i]);

                       }

                       chat.messageArrfen=tempMessages;
                       msgToTop();
                     }else{
                       for(var i =0; i < ret.messages.length; i++) {
                            ret.messages[i].translated="";
                               tempMessages.push(ret.messages[i]);

                       }
                        chat.messageArrfen=tempMessages;
                         msgToTop();

                     }
                       setTimeout(function(){
                         if(ret.messages.length>500){
                              insermessage(ret.messages.slice(ret.messages.length-500,ret.messages.length).concat(tempGMs_temp),db,2);
                         }else{
                           insermessage(ret.messages.concat(tempGMs_temp),db,2);
                         }
                         chat.addMessage(count,2);

                       },100)




                } else {

                  setTimeout(function(){
                     insermessage(ret.messages.concat(tempGMs_temp),db,2);
                    //  alert(count);
                     chat.addMessage(count);
                  },100)

                }

                  chat.isLoading = false; //关闭加载转圈
                  $(".main").css('opacity', '1');

                }

              }
            });

         },
         Continue_getHistroy4:function(messages,cursor,count){
           api.ajax({
             url: 'https://report.im.jpush.cn/v2/groups/' + gid + '/messages?cursor=' + cursor,
             method: 'get',
             headers: {
               'Authorization': 'Basic ' + par,
               'Content-Type': 'application/json;charset=utf-8'
             }
           },function(ret, err){
               if (ret) {

                    var newMes=messages.concat(ret.messages);
                  console.log("消息太多在进行获取信息数为===="+newMes.length);
                if(ret.count==1000&&(ret.total%1000!=0)){
                        console.log("消息太多又超过1000条");
                        chat.Continue_getHistroy4(newMes,ret.cursor,count);

                    }else{

                    }
                   var tempMessages=[];
                   var tempGMs_temp=[];
                   for(var i=0;i<tempGMs.length;i++){
                         if(tempGMs[i].target_id==gid){
                           tempGMs_temp.push(tempGMs[i]);
                         }
                   }
                   for(var i =newMes.length-50; i < newMes.length; i++) {
                        newMes[i].translated="";
                           tempMessages.push(newMes[i]);

                   }
                   chat.messageArrfen=tempMessages;
                   msgToTop();
                     console.log();

                     setTimeout(function(){

                            insermessage(newMes.slice(newMes.length-500,newMes.length).concat(tempGMs_temp),db,2);

                            chat.addMessage(count);
                     },100)
                     chat.isLoading = false; //关闭加载转圈
                     $(".main").css('opacity', '1');


               }
           });



         },
        addMessage:function(count,statu){
        // var indexValue=chat.messageArrfen.length;
        db.selectSql({
                  name: 'tinkle',
                  sql: "select * from tin_im_Gmessage where gid='"+gid+"' order by ctime_ms asc limit "+count+",10000"
        }, function(msgs2,err){
            if( msgs2.status ){
              console.log("更新数据成功");
                   var 	this_number=chat.number;
                   chat.number+=msgs2.data.length;
                  // alert(JSON.stringify(msgs2));
                  for(var i=0;i<msgs2.data.length;i++){
                       msgs2.data[i].msg_body=JSON.parse(msgs2.data[i].msg_body.replace(/&prime;/g,"'"));
                       msgs2.data[i].create_time=Number(msgs2.data[i].create_time);
                       msgs2.data[i].translated="";
                  }
                 //  alert(JSON.stringify(msgs2.data.length));

                  setTimeout(function(){
                    if(statu == 2){
                      chat.messageArrfen=msgs2.data;
                    }else{
                      chat.messageArrfen= chat.messageArrfen.concat(msgs2.data);
                    }
                    if(chat.messageArrfen.length>this_number){  //如果消息太多则剪切到规定的长度
                        chat.messageArrfen=chat.messageArrfen.slice(chat.messageArrfen.length-this_number, chat.messageArrfen.length);
                        chat.number=this_number;
                    }
                //用来让新进来的群员有头像
                     for(var i=0;i<chat.messageArrfen.length;i++){
                       (function(i){
                                       //判断新的消息的头像和昵称是不是已有缓存没有的话，进行获取并储存
                                       if(!avatarobj[chat.messageArrfen[i].from_id]&&toggle4==true){

                                         var new_from_id=chat.messageArrfen[i].from_id;

                                         api.ajax({
                                           url: json['http'] + json['tin']['userinfo'],
                                           method: 'post',
                                           data: {
                                             values: {
                                               uiId: new_from_id,
                                               pageUiId: new_from_id
                                             }
                                           },

                                         }, function(ret2, err) {
                                             console.log(JSON.stringify(ret2));
                                           if(ret2) {
                                            avatarobj[new_from_id]={avatar_url:ret2.data.avatar_url,nickname:ret2.data.nickname};
                                                var b=chat.messageArrfen;
                                                chat.messageArrfen=[];
                                                chat.messageArrfen=b;
                                                var groupMember=api.pageParam['gid']+'Member';
                                                  $api.setStorage(groupMember, avatarobj);
                                                 console.log("添加用户的昵称头像到缓存成功");
                                             }

                                         });


                                       }
                                   })(i)

                     }
                      // alert(JSON.stringify(ret.messages[i]));
                      msgToTop();
                  },100)


              }else{
                alert( JSON.stringify( err ) );
            }
        });
      },
        created: function() {

          if(toggle){
           this.getHistroy_start();
           }

             msgToTop();
        //  setTimeout(function(){
        //    chat.isLoading = false;
        //    $(".main").css('opacity', '1');
         //
        //  },100)
         //把草稿添加到输入框
         UIChatBox.value({
      msg: $api.getStorage(groupsendtext)

});



        },
        //消息发不出去是调用登录极光再次发出这些消息

    //消息发送失败时信息存储重发的实体
    failSendMessageBody:function(msgContext,type,state,duration,content,gid,avatar_url,nickname,txt,key,target_gname,describe){
      //封装成原先消息体的格式这样才可以让vue 渲染出来

                         var create_time=new Date();

                         var contentfail={};
                         contentfail.target_type="group";
                         contentfail.from_id=$api.getStorage('id');
                         contentfail.target_id=api.pageParam['gid'];
                         contentfail.msg_type="text";
                         contentfail.create_time=create_time.getTime();
                        var msg_body={};
                          msg_body.text=msgContext;
                          var extras={};
                          extras.type=type;
                          extras.fail="1";
                          extras.duration=duration;
                          extras.content=content;
                          extras.gid=gid;
                          extras.avatar_url=avatar_url;
                          extras.nickname=nickname;
                          extras.txt=txt;
                          extras.key=key;
                          extras.target_gname=target_gname;
                          extras.describe=describe;
                          msg_body.extras=extras;
                         contentfail.msg_body=msg_body;
                         contentfail.translated="";

                      var failMessages={};
                          failMessages.type=type;
                          failMessages.duration=duration;
                          failMessages.text=msgContext;
                          failMessages.index=chat.messageArrfen.length;
                          chat.messageArrfen.push(contentfail);
                          failS.push(failMessages);
                          setTimeout(function(){
                            msgToTop();
                          },50);
                        //     if(state==0){  //0时，是以前的消重新登录极光再重发
                        //  setTimeout(function(){
                        //    chat.failSendMessage();
                        //  },100);
                        //  }

    },
    //用于转换判断显示时间
  change2:function(number,index){
      // alert(number);
      // number1= parseInt(number);
      // var toggle5=true;//用来判断8分钟内的时间是是否显示
        var msg_time;
        // var realTime;
        var now=new Date();

        if((number-chat.messageArrfen[toggle6].create_time)<=8*60*1000&&index!=0&&index!=toggle6){
          return "";
        }else{
         toggle6=index;
        }

      function timestampToTime(realTime,nowTime) {
              var date = new Date(realTime);//时间戳为10位需*1000，时间戳为13位的话不需乘1000

              Y = date.getFullYear() + '-';
              M = (date.getMonth()+1 < 10 ? '0'+(date.getMonth()+1) : date.getMonth()+1) + '-';
              D = date.getDate() + ' ';
              h = date.getHours() + ':';
              m = date.getMinutes() < 10 ? ('0'+date.getMinutes()) : (date.getMinutes()+'');
              s = date.getSeconds();
              Y1 = nowTime.getFullYear() + '-';
              M1 = (nowTime.getMonth()+1 < 10 ? '0'+(date.getMonth()+1) : date.getMonth()+1) + '-';
              D1 = nowTime.getDate() + ' ';
              D2 = nowTime.getDate()-1 + ' ';

              if((Y+M+D)==(Y1+M1+D1)){
                return h+m;
              }
              // else if((Y+M+D)==(Y1+M1+D2)){
              // 	return "昨天 "+h+m;
              // }
              else{
                return Y+M+D+h+m;
              }



          }
            return timestampToTime(number,now);



    }

      },

    })
          //点申请权限
          function fnrequestPermission(string) {

            api.requestPermission({
                list: [string,"storage"],
            }, function(ret, err) {
                  // if(ret.list[0].granted){
                  //
                  // }


            });
        }
        //打开并发送图片最多为两张的图片
        function openAndsendPic(){
           UIMediaScanner.open({
                  type: 'picture',
                  column: 4,
                  classify: false,
                  max: 2,
                  sort: {
                      key: 'time',
                      order: 'desc'
                  },
                  texts: {
                      stateText: '已选择*项',
                      cancelText: '取消',
                      finishText: '完成'
                  },
                  exchange: true,
                  rotation: false,
                  // showPreview:true
              }, function(ret) {
                  if (ret) {
                      // alert(JSON.stringify(ret.list[0].path));
                      // alert(JSON.stringify(ret));
                      if(ret.eventType=='confirm'){
                        // alert("进了");
                        for(var i=0;i<ret.list.length;i++){
                            (function(i){
                              UIMediaScanner.transPath({
                                            path:ret.list[i].path
                                        }, function(ret_, err) {
                                            if (ret) {
                                                  // alert(JSON.stringify(ret_));
                                                uploadPic(ret_.path);
                                            } else {

                                            }
                                        });

                            })(i)


                        }


                      }

                  }
              });

        }
        //打开相机并照相发送图片
        function openCameraSendpic(){
          api.getPicture({
            sourceType: 'camera',
            encodingType: 'jpg',
            mediaValue: 'pic',
            destinationType: 'url',
            allowEdit: true,
            preview: true, //描述：（可选项）是否选择图片后进行预览，只支持iOS。
            quality: 50,
            saveToPhotoAlbum: true
          }, function(ret, err) {
            if(ret) {
              // //alert(JSON.stringify(ret.data));
                               if(ret.data!=""){
                                     uploadPic(ret.data);
                               }

            } else {
              //alert(JSON.stringify(err));
            }
          });
        }
    //定义刷新页面函数
    function refreshfn(){
      var refresh = "window.location.reload();";
      //self.location=document.referrer;
      if($api.getStorage("frameName")){//刷新fram
        api.execScript({
          frameName: $api.getStorage("frameName"),
            script: refresh
        });
        api.closeFrame({});
        return;
      }
      //刷新win
      api.execScript({
          script: refresh
      });
      api.closeFrame({});
      ////alert('刷新页面')
    };

    //生成随机字符串
    function random(length) {
      var str = Math.random().toString(36).substr(2);
      if(str.length >= length) {
        return str.substr(0, length);
      }
      str += random(length - str.length);
      return str;
    }

    //获取当前时间，格式YYYY-MM-DD
    function getNowFormatDate() {
      var date = new Date();
      var seperator1 = "-";
      var year = date.getFullYear();
      var month = date.getMonth() + 1;
      var strDate = date.getDate();
      if(month >= 1 && month <= 9) {
        month = "0" + month;
      }
      if(strDate >= 0 && strDate <= 9) {
        strDate = "0" + strDate;
      }
      var currentdate = year + seperator1 + month + seperator1 + strDate+' 23:59:59';
      return currentdate;
    }

    //求出当前时间的7天前是几号
    function getNowFormatDate2() {


      var now = new Date();

      var date= new Date(now.getTime() - 6 * 24 * 3600 * 1000);
      // alert(date.getTime());//获取时间戳
     //如果进入的该群的时间是7天内则以他进入该群的时间为获取信息时间的开始
      if((jointime-date)>0){

  //  //alert(jointime-date);
     var timebin='';
         jointime= parseInt(jointime);
     function timestampToTime(timestamp) {
             var date = new Date(timestamp);//时间戳为10位需*1000，时间戳为13位的话不需乘1000
             Y = date.getFullYear() + '-';
             M = (date.getMonth()+1 < 10 ? '0'+(date.getMonth()+1) : date.getMonth()+1) + '-';
             D = date.getDate() + ' ';
             h = date.getHours() + ':';
             m = date.getMinutes() + ':';
             s = date.getSeconds();
             timebin=Y+M+D+h+m+s;
         }

          timestampToTime(jointime);

          return timebin;
          console.log(formatDate(d));


      }
      else {
        var year = date.getFullYear();
        var month = date.getMonth() + 1;
        var day = date.getDate();
        if(month >= 1 && month <= 9) {
          month = "0" + month;
        }
        if(day >= 0 && day <= 9) {
          day = "0" + day;
        }
        return year + '-' + month + '-' + day;

      }


    }
    function getNowFormatDate3(num) {
      var date= new Date(now.getTime() - num * 24 * 3600 * 1000);
      var seperator1 = "-";
      var year = date.getFullYear();
      var month = date.getMonth() + 1;
      var strDate = date.getDate()+" ";
    var  h = date.getHours() + ':';
    var  m = date.getMinutes() + ':';
    var  s = date.getSeconds();
      if(month >= 1 && month <= 9) {
        month = "0" + month;
      }
      if(strDate >= 0 && strDate <= 9) {
        strDate = "0" + strDate;
      }
      var currentdate = year + seperator1 + month + seperator1 + strDate+" 00:00:00";
      return currentdate;
    }
    function change1(number,b){

        var msg_time;
        var realTime;
       var date=(now.getTime() - 6 * 24 * 3600 * 1000)/1000;
      //  alert("date"+JSON.stringify(date));


         var timebin='';

        var number1=(number+"").substring(0,10);
          msg_time= parseInt(number1);


        //  alert("msg_time"+JSON.stringify(msg_time));
        realTime=(msg_time>=date)?msg_time:date;

      function timestampToTime(realTime) {
              var date = new Date(realTime*1000);//时间戳为10位需*1000，时间戳为13位的话不需乘1000
              Y = date.getFullYear() + '-';
              M = (date.getMonth()+1 < 10 ? '0'+(date.getMonth()+1) : date.getMonth()+1) + '-';
              D = date.getDate() + ' ';
              h = date.getHours() + ':';
              m = date.getMinutes() + ':';
              s = date.getSeconds();
              timebin=Y+M+D+h+m+s;
             //  //alert(timebin+h+m+s);
          }

           timestampToTime(realTime);
           return timebin;
          // alert(timebin);

    }
    // change1(1529899869872);
    // change1(15299107140);

    //发送图片
      function uploadPic(picurl) {
        var connectionType = api.connectionType;//你的当前网络状态
        if(connectionType==="none"){
        // alert("奇怪");

          api.toast({
              msg: networkDes,
              duration: 1500,
              location: 'middle'
          });


      }
      var cdate=new Date().getTime();
         // alert(cdate);
         if($api.getStorage('language')=='zho'){
              msgContent = "[圖片]";
         }else{
              msgContent = "[Picture]";
         }
         time = cdate;
         from_id = $api.getStorage("id");
         var Cindex=chat.messageArrfen.length;
        chat.failSendMessageBody(picurl,"img",1);
// }
        qiniu.upfile({
          file: picurl,
          name: "f8cc5f9956df68260156dffa4e9b0014" + (new Date).getTime(),
        }, function(ret, err) {
          if(ret.status == 1) {
            if(ret.oper == "complete") {
              console.log(ret['info']['key']);
              // //alert(ret);
              qinniuKey = json['qiniu'] + ret.info.key;
              // 发送消息
              //发送事务通知聊天列表发送消息
              api.sendEvent({    //发给 chat_list 页面
                  name: 'ChatListExec',
                  extra: {
                      targetType: "group",  //来源的类型单聊类型 另外一种是群聊类型single
                      target_gid:api.pageParam['gid'],  //单聊的对象极光的username既tinkle的uiid
                      target_gname:api.pageParam['gname'],
                      content: qinniuKey,  //要发送的消息体内容
                      type: 'img'     //发送的自定义的消息类型
                  }
              });

              //接受上面发送的给chat_list事务执行结果的回调
              api.addEventListener({
                  name: 'ChatListExecReturn'
              }, function(ret, err){
                  if( ret ){
                      if(ret.value.state==1){ //发送成功返回
                         console.log("发送消息成功");
                         if(chat.messageArrfen[Cindex-1] != null){                          //这是防止用户点击发送消息过快前面的还在转圈
                           chat.messageArrfen[Cindex-1].msg_body.extras.fail="0"
                         }
                         if(chat.messageArrfen[Cindex-2] != null){
                           chat.messageArrfen[Cindex-2].msg_body.extras.fail="0"
                         }

                            chat.messageArrfen[Cindex].msg_body.extras.fail="0";   //发送消息成功是消息的加载转圈去掉
                            chat.messageArrfen[Cindex].msg_body.text=ret.value.text;

                      }
                  }else{
                       alert( JSON.stringify( err ) );
                  }
              });
            }
          } else {
            //alert(err);
          }
        });

      }

      if($api.getStorage("language") == "zho"){
        //$api.text($api.dom('.mingcheng'),"修改群名称")
        //$('.group_setting_list>.abcd').text("修改群名称");
        chat.sevenhis="聊 天 记 录 仅 保 留 7 天 ";
        chat.fanyi="直 接 點 擊 聊 天 内 容 即 可 翻 譯";

      }
      ////alert('hellow');
      // 安卓返回键
    api.addEventListener({
        name: 'keyback'
    }, function(ret, err) {
      // //alert("laji");
      chat.closed();
    });
    // 右滑事件
    api.addEventListener({
          name:'swiperight'
      }, function(ret, err){
         chat.closed();
      });
  };
//生成随机字符串
function random(length) {
  var str = Math.random().toString(36).substr(2);
  if(str.length >= length) {
    return str.substr(0, length);
  }
  str += random(length - str.length);
  return str;
}


function addnotice(content){    //不刷新页面在页面中加入自己的公告
   msgContent = "[公告]";
  var cdate=new Date().getTime();
   time = cdate;
   from_id = $api.getStorage("id");
  chat.failSendMessageBody(msgContent,"notice",1,0,content);
  // xihuancc();

}
//如果是自己是第一次进入该群是发送问候语
  function  sendwelcome(){
    var groupfirst=api.pageParam['gid']+'first';
       if(	$api.getStorage(groupfirst)==groupfirst){
         setTimeout(function(){
           var text='I\'m new , how are you .';
           var cdate=new Date().getTime();
              // alert(cdate);
              msgContent = text;
              time = cdate;
              from_id = $api.getStorage("id");
              var Cindex=chat.messageArrfen.length;
             chat.failSendMessageBody(text,"txt",1);
             //发送事务通知聊天列表发送消息
             api.sendEvent({    //发给 chat_list 页面
                 name: 'ChatListExec',
                 extra: {
                     targetType: "group",  //来源的类型单聊类型 另外一种是群聊类型single
                     target_gid:gid,  //单聊的对象极光的username既tinkle的uiid
                     target_gname:gname,
                     content: text,  //要发送的消息体内容
                     type: 'txt'     //发送的自定义的消息类型
                 }
             });

             //接受上面发送的给chat_list事务执行结果的回调
             api.addEventListener({
                 name: 'ChatListExecReturn'
             }, function(ret, err){
                 if( ret ){
                     if(ret.value.state==1){ //发送成功返回
                        console.log("发送消息成功");
                        if(chat.messageArrfen[Cindex-1] != null){                          //这是防止用户点击发送消息过快前面的还在转圈
                          chat.messageArrfen[Cindex-1].msg_body.extras.fail="0"
                        }
                        if(chat.messageArrfen[Cindex-2] != null){
                          chat.messageArrfen[Cindex-2].msg_body.extras.fail="0"
                        }

                           chat.messageArrfen[Cindex].msg_body.extras.fail="0";   //发送消息成功是消息的加载转圈去掉

                     }
                 }else{
                      alert( JSON.stringify( err ) );
                 }
             });


           console.log("清除是否是第一次进入的缓存");
                $api.rmStorage(groupfirst);

         },1200)


  }
    }
    //发送表情
    function sendEmo(emo){
      // alert("???")
      var cdate=new Date().getTime();
       // alert(cdate);
       if($api.getStorage('language')=='zho'){
         msgContent = "[表情]";
       }else{
         msgContent = "[Picture]";
       }
       time = cdate;
       from_id = $api.getStorage("id");
       var Cindex=chat.messageArrfen.length;
      chat.failSendMessageBody(emo,"img",1);
      //发送事务通知聊天列表发送消息
      api.sendEvent({    //发给 chat_list 页面
          name: 'ChatListExec',
          extra: {
              targetType: "group",  //来源的类型单聊类型 另外一种是群聊类型group
              target_gid:gid,  //单聊的对象极光的username既tinkle的uiid
              target_gname:gname,
              content: emo,  //要发送的消息体内容
              type: 'img'     //发送的自定义的消息类型
          }
      });

      api.sendEvent({
        name: 'loginIM2',
        extra: {
          key1: api.pageParam['gid'], //群组的Id
          key2: msgContent, //
          key3: time,
          key4: from_id,
          key5:chat.group_avatar,
          key6:api.pageParam['gname']
        }
      });
      //接受上面发送的给chat_list事务执行结果的回调
      api.addEventListener({
          name: 'ChatListExecReturn'
      }, function(ret, err){
          if( ret ){
            // alert(JSON.stringify(ret));
              if(ret.value.state==1){ //发送成功返回
                 console.log("发送消息成功");
                if(chat.messageArrfen[Cindex-1] != null){                          //这是防止用户点击发送消息过快前面的还在转圈
                  chat.messageArrfen[Cindex-1].msg_body.extras.fail="0"
                }
                if(chat.messageArrfen[Cindex-2] != null){
                  chat.messageArrfen[Cindex-2].msg_body.extras.fail="0"
                }

                   chat.messageArrfen[Cindex].msg_body.extras.fail="0";   //发送消息成功是消息的加载转圈去掉
                   chat.messageArrfen[Cindex].msg_body.text=ret.value.text;

                   setTimeout(function() {
                     msgToTop();   //回到最底部，因为发送图的大小要点时间获取
                   }, 500)
              }else if(ret.value.state==2){  //发送失败，对方极光账户不存在进行注册

                history.go(0);
                 msgToTop();
             }
          }else{
               alert( JSON.stringify( err ) );
          }
      });
    }
    //进来直接获取用户表情包
    // function getEmo(){
    //   api.ajax({
    //       url: 'http://api.baopinghui.com/app_tinUserinfoControllerC/selectEmoji',
    //       method: 'post',
    //       data: {
    //           values: {
    //               uiid: chat.ownId
    //           }
    //       }
    //   },function(ret, err){
    //       if (ret) {
    //           var emoji=ret.data.emoji.split(",");
    //           chat.emotion=emoji;
    //           chat.emotion.reverse();//翻转表情包数组，让新添加的那个表情放在第一个位置
    //           // alert(JSON.stringify(chat.emotion));
    //       } else {
    //           alert( JSON.stringify( err ) );
    //       }
    //   });
    //
    // }
    //让新获取的数据往上顶
    function msgToTop() {
      Vue.nextTick(function() {
        $api.dom('.main').scrollTop = $api.dom('.main').scrollHeight;
      });
    }




  </script>
  <script type="text/javascript">

  </script>

</html>

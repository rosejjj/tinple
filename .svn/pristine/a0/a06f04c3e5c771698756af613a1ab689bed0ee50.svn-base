<!DOCTYPE HTML>
<html>

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="maximum-scale=1.0, minimum-scale=1.0, user-scalable=0, initial-scale=1.0, width=device-width" />
    <meta name="format-detection" content="telephone=no, email=no, date=no, address=no">
    <title>Hello APP</title>
    <link rel="stylesheet" type="text/css" href="../css/api.css" />
    <link rel="stylesheet" type="text/css" href="../css/aui.css" />
    <style>
        /*button {
            margin: 5px 10px;
            padding: 5px;
        }*/

        .btn {
            position: absolute;
            bottom: 0;
            width: 100%;
            height: 50px;
            background: #eee;
        }

        .btn input {
            width: 100%;
            height: 100%;
        }
    </style>
</head>

<body>

    <div class="btn">
        <input type="button" name="" id="pressBtn" value="按住 说话">
    </div>

    <script id="contentTemplate" type="text/x-dot-template">
        <div class="aui-chat-item aui-chat-right">
            <div class="aui-chat-media">
                <img src="../image/liulangnan.png" />
            </div>
            <div class="aui-chat-inner">
                <div class="aui-chat-name">流浪男</div>
                <div class="aui-chat-content">
                    <div class="aui-chat-arrow"></div>
                    {{=it.talktext}}
                </div>
                <div class="aui-chat-status">
                    <i class="aui-iconfont aui-icon-correct aui-text-success"></i>
                </div>
            </div>
        </div>
    </script>

    <section id="cont" class="aui-chat">

    </section>

    <button type="button" onclick="fnrecord()" name="button">fnrecord</button>
    <button type="button" onclick="fnstopRecord()" name="button">fnstopRecord</button>
    <button type="button" onclick="fncancelRecord()" name="button">fncancelRecord</button>
    <button type="button" onclick="fnaddRecordHUD()" name="button">fnaddRecordHUD</button>
    <button type="button" onclick="fnshowRecordHUD()" name="button">fnshowRecordHUD</button>
    <button type="button" onclick="fnhideRecordHUD()" name="button">fnhideRecordHUD</button>
    <button type="button" onclick="fnread()" name="button">fnread</button>
    <button type="button" onclick="fnstopRead()" name="button">fnstopRead</button>
    <button type="button" onclick="fnpauseRead()" name="button">fnpauseRead</button>
    <button type="button" onclick="fnresumeRead()" name="button">fnresumeRead</button>
</body>
<script type="text/javascript" src="../script/api.js"></script>
<script type="text/javascript" src="../script/dotmin.js"></script>
<script type="text/javascript">

    var btnEle = document.getElementById("pressBtn");
    var tStart = 0;
    var tEnd = 0;
    var tMove = 0;

    apiready = function() {
        var iflyRecognition = api.require('iflyRecognition');
        iflyRecognition.createUtility({
            //ios_appid: '',      // 填写讯飞平台上获得的appid
            android_appid: '5b6d4135'   // 填写讯飞平台上获得的appid
        }, function(ret, err) {
            if (ret.status) {
                api.alert({
                    msg: '创建成功'
                });
            } else {
                api.alert({
                    msg: "创建失败"
                });
            }
        });
    };


    function fnrecord() {
        var flag = true;
        var iflyRecognition = api.require('iflyRecognition');
        iflyRecognition.record({
            vadbos: 5000,
            vadeos: 5000,
            rate: 16000,
            asrptt: 1,
            audioPath: 'fs://speechRecogniser/speech.pcm'
        }, function(ret, err) {
            if (ret.status) {
                // api.alert({
                //     msg: ret.wordStr
                // });
                if (flag) {
                    wordStr = ret.wordStr;
                    fndoTempt();
                    flag = false;
                }
            } else {
                api.alert({
                    msg: err.msg
                });
            }
        });
    }

    function fnstopRecord() {
        var iflyRecognition = api.require('iflyRecognition');
        iflyRecognition.stopRecord();
    }

    function fncancelRecord() {
        var iflyRecognition = api.require('iflyRecognition');
        iflyRecognition.cancelRecord();
    }

    function fnaddRecordHUD() {
        var iflyRecognition = api.require('iflyRecognition');
        iflyRecognition.addRecordHUD({
            centerX: 160,
            centerY: 120,
            radius: 80,
            transparentR: 40,
            bg: '#666',
            fixedOn: api.frameName,
            fixed: false
        }, function(ret, err) {
            var volume = ret.volume;
        });
    }

    function fnshowRecordHUD() {
        var iflyRecognition = api.require('iflyRecognition');
        iflyRecognition.showRecordHUD();
    }

    function fnhideRecordHUD() {
        var iflyRecognition = api.require('iflyRecognition');
        iflyRecognition.hideRecordHUD();
    }

    function fnread() {
        var iflyRecognition = api.require('iflyRecognition');
        iflyRecognition.read({
            readStr: '一行白鹭上青天，两只黄鹂鸣翠柳',
            speed: 60,
            volume: 60,
            voice: 1,
            rate: 16000,
            audioPath: 'fs://speechRecogniser/read.mp3'
        }, function(ret, err) {
            if (ret.status) {
                ret.speakProgress
            } else {
                api.alert({
                    msg: err.msg
                });
            }
        });
    }

    function fnstopRead() {
        var iflyRecognition = api.require('iflyRecognition');
        iflyRecognition.stopRead();
    }

    function fnpauseRead() {
        var iflyRecognition = api.require('iflyRecognition');
        iflyRecognition.pauseRead();
    }

    function fnresumeRead() {
        var iflyRecognition = api.require('iflyRecognition');
        iflyRecognition.resumeRead();
    }

    function fninitEventListener() {
        btnEle.addEventListener("touchstart", function(event) {
            event.preventDefault();
            tStart = 0;
            tStart = event.touches[0].pageY;
            btnEle.value = '松开 结束';
            fnrecord();
        });
        btnEle.addEventListener("touchmove", function(event) {
            event.preventDefault();
            tMove = 0;
            tMove = event.targetTouches[0].pageY;
            if (tStart - tMove < 100) {
                btnEle.value = '松开结束';
            } else {
                btnEle.value = '松开手指，取消发送';
            }
        });
        btnEle.addEventListener("touchend", function(event) {
            event.preventDefault();
            tEnd = 0;
            tEnd = event.changedTouches[0].pageY;
            btnEle.value = '按住 说话';
            if (tStart - tEnd < 100) {

            }
        });
    };

    fninitEventListener();

    function fndoTempt() {
        var data = {
            "talktext": wordStr,
        };
        var conttemp = doT.template(document.getElementById('contentTemplate').innerHTML);
        var ele = document.getElementById('cont');
        $api.append(ele, conttemp(data));
        api.parseTapmode();
    }
</script>

</html>
